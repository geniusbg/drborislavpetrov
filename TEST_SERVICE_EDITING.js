// üß™ –¢–µ—Å—Ç –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —É—Å–ª—É–≥–∏ - Race Condition
const puppeteer = require('puppeteer');

async function testServiceEditing() {
  console.log('üéØ –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —É—Å–ª—É–≥–∏...');
  
  const browser = await puppeteer.launch({ 
    headless: false,
    slowMo: 100 
  });
  
  const page = await browser.newPage();
  await page.setViewport({ width: 1920, height: 1080 });
  
  try {
    // 1. Login
    console.log('üìã Login...');
    await page.goto('http://localhost:3000/admin/login');
    await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
    
    await page.type('input[name="username"]', 'admin');
    await page.type('input[name="password"]', 'admin123');
    await page.click('button[type="submit"]');
    await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
    
    // 2. –û—Ç–∏–¥–∏ –≤ —Å–µ–∫—Ü–∏—è –£—Å–ª—É–≥–∏
    console.log('üìã –û—Ç–∏–≤–∞–º –≤ —Å–µ–∫—Ü–∏—è –£—Å–ª—É–≥–∏...');
    await page.evaluate(() => {
      const buttons = Array.from(document.querySelectorAll('button'));
      const servicesBtn = buttons.find(btn => btn.textContent.trim() === '–£—Å–ª—É–≥–∏');
      if (servicesBtn) servicesBtn.click();
    });
    await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
    
    // 3. –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ –∏–º–∞ —É—Å–ª—É–≥–∏
    const servicesCount = await page.evaluate(() => {
      const serviceRows = document.querySelectorAll('tr');
      return serviceRows.length - 1; // –ò–∑–≤–∞–∂–¥–∞–º–µ header-–∞
    });
    console.log(`üìã –ù–∞–º–µ—Ä–µ–Ω–∏ —É—Å–ª—É–≥–∏: ${servicesCount}`);
    
    if (servicesCount === 0) {
      console.log('‚ùå –ù—è–º–∞ —É—Å–ª—É–≥–∏ –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ');
      return;
    }
    
    // 4. –ö–ª–∏–∫–Ω–∏ –Ω–∞ –ø—ä—Ä–≤–∞—Ç–∞ —É—Å–ª—É–≥–∞ –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ
    console.log('üìã –ö–ª–∏–∫–∞–º –Ω–∞ –ø—ä—Ä–≤–∞—Ç–∞ —É—Å–ª—É–≥–∞ –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ...');
    await page.evaluate(() => {
      // –¢—ä—Ä—Å–∏ –±—É—Ç–æ–Ω —Å Edit –∏–∫–æ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü–∞—Ç–∞
      const tableButtons = Array.from(document.querySelectorAll('table button'));
      const editBtn = tableButtons.find(btn => {
        const svg = btn.querySelector('svg');
        return svg && btn.className.includes('text-blue-600') && !btn.className.includes('text-red-600');
      });
      if (editBtn) editBtn.click();
    });
    await (page.waitForTimeout ? page.waitForTimeout(1000) : new Promise(resolve => setTimeout(resolve, 1000)));
    
    // 5. –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ —Å–µ –æ—Ç–≤–æ—Ä–∏ –º–æ–¥–∞–ª
    const modalOpened = await page.evaluate(() => {
      const modal = document.querySelector('form');
      return !!modal;
    });
    
    if (!modalOpened) {
      console.log('‚ùå –ú–æ–¥–∞–ª—ä—Ç –Ω–µ —Å–µ –æ—Ç–≤–æ—Ä–∏');
      return;
    }
    
    console.log('‚úÖ –ú–æ–¥–∞–ª—ä—Ç —Å–µ –æ—Ç–≤–æ—Ä–∏');
    
         // 6. –ü–æ–ø—ä–ª–Ω–∏ —Ñ–æ—Ä–º–∞—Ç–∞ —Å –Ω–æ–≤–∏ –¥–∞–Ω–Ω–∏
     console.log('üìã –ü–æ–ø—ä–ª–≤–∞–º —Ñ–æ—Ä–º–∞—Ç–∞...');
     
     // –ò–∑—á–∏—Å—Ç–∏ –∏ –ø–æ–ø—ä–ª–Ω–∏ –∏–º–µ
     await page.click('input[type="text"]');
     await page.keyboard.down('Control');
     await page.keyboard.press('A');
     await page.keyboard.up('Control');
     await page.type('input[type="text"]', 'Test Service Updated');
     
     // –ò–∑—á–∏—Å—Ç–∏ –∏ –ø–æ–ø—ä–ª–Ω–∏ –ø—Ä–æ–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ—Å—Ç
     await page.click('input[type="number"]');
     await page.keyboard.down('Control');
     await page.keyboard.press('A');
     await page.keyboard.up('Control');
     await page.type('input[type="number"]', '45');
     
     // –ò–∑—á–∏—Å—Ç–∏ –∏ –ø–æ–ø—ä–ª–Ω–∏ —Ü–µ–Ω–∞
     await page.click('input[type="number"][step="0.01"]');
     await page.keyboard.down('Control');
     await page.keyboard.press('A');
     await page.keyboard.up('Control');
     await page.type('input[type="number"][step="0.01"]', '99.99');
    
    console.log('‚úÖ –§–æ—Ä–º–∞—Ç–∞ —Å–µ –ø–æ–ø—ä–ª–Ω–∏');
    
         // 7. –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ –∏–º–∞ –±—É—Ç–æ–Ω "–û—Ç–∫–∞–∑" –∏ –¥–∞–ª–∏ —Ä–∞–±–æ—Ç–∏
     console.log('üìã –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º –∑–∞ –±—É—Ç–æ–Ω "–û—Ç–∫–∞–∑"...');
     const hasCancelButton = await page.evaluate(() => {
       const buttons = Array.from(document.querySelectorAll('button'));
       const cancelBtn = buttons.find(btn => btn.textContent.trim() === '–û—Ç–∫–∞–∑');
       return !!cancelBtn;
     });
     
     if (hasCancelButton) {
       console.log('‚úÖ –ë—É—Ç–æ–Ω "–û—Ç–∫–∞–∑" –µ –Ω–∞–ª–∏—á–µ–Ω');
       
       // 7.5. –¢–µ—Å—Ç–≤–∞–π –¥–∞–ª–∏ –±—É—Ç–æ–Ω—ä—Ç "–û—Ç–∫–∞–∑" —Ä–∞–±–æ—Ç–∏
       console.log('üìã –¢–µ—Å—Ç–≤–∞–º –¥–∞–ª–∏ –±—É—Ç–æ–Ω—ä—Ç "–û—Ç–∫–∞–∑" —Ä–∞–±–æ—Ç–∏...');
       await page.evaluate(() => {
         const buttons = Array.from(document.querySelectorAll('button'));
         const cancelBtn = buttons.find(btn => btn.textContent.trim() === '–û—Ç–∫–∞–∑');
         if (cancelBtn) cancelBtn.click();
       });
       
       // –ò–∑—á–∞–∫–∞–π –º–∞–ª–∫–æ –∏ –ø—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ –º–æ–¥–∞–ª—ä—Ç —Å–µ –∑–∞—Ç–≤–æ—Ä–∏
       await (page.waitForTimeout ? page.waitForTimeout(1000) : new Promise(resolve => setTimeout(resolve, 1000)));
       
       const modalClosedAfterCancel = await page.evaluate(() => {
         const modal = document.querySelector('form');
         return !modal;
       });
       
       if (modalClosedAfterCancel) {
         console.log('‚úÖ –ë—É—Ç–æ–Ω "–û—Ç–∫–∞–∑" —Ä–∞–±–æ—Ç–∏ - –º–æ–¥–∞–ª—ä—Ç —Å–µ –∑–∞—Ç–≤–æ—Ä–∏');
       } else {
         console.log('‚ùå –ë—É—Ç–æ–Ω "–û—Ç–∫–∞–∑" –ù–ï —Ä–∞–±–æ—Ç–∏ - –º–æ–¥–∞–ª—ä—Ç –Ω–µ —Å–µ –∑–∞—Ç–≤–æ—Ä–∏');
       }
       
       // –û—Ç–≤–æ—Ä–∏ –º–æ–¥–∞–ª–∞ –æ—Ç–Ω–æ–≤–æ –∑–∞ —Å–ª–µ–¥–≤–∞—â–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤–µ
       console.log('üìã –û—Ç–≤–∞—Ä—è–º –º–æ–¥–∞–ª–∞ –æ—Ç–Ω–æ–≤–æ –∑–∞ —Å–ª–µ–¥–≤–∞—â–∏—Ç–µ —Ç–µ—Å—Ç–æ–≤–µ...');
       await page.evaluate(() => {
         const tableButtons = Array.from(document.querySelectorAll('table button'));
         const editBtn = tableButtons.find(btn => {
           const svg = btn.querySelector('svg');
           return svg && btn.className.includes('text-blue-600') && !btn.className.includes('text-red-600');
         });
         if (editBtn) editBtn.click();
       });
       await (page.waitForTimeout ? page.waitForTimeout(1000) : new Promise(resolve => setTimeout(resolve, 1000)));
       
     } else {
       console.log('‚ùå –ë—É—Ç–æ–Ω "–û—Ç–∫–∞–∑" –Ω–µ –µ –Ω–∞–ª–∏—á–µ–Ω');
     }
     
     // 8. –ö–ª–∏–∫–Ω–∏ "–ó–∞–ø–∞–∑–∏"
     console.log('üìã –ö–ª–∏–∫–∞–º "–ó–∞–ø–∞–∑–∏"...');
     await page.evaluate(() => {
       const buttons = Array.from(document.querySelectorAll('button'));
       const saveBtn = buttons.find(btn => btn.textContent.trim() === '–ó–∞–ø–∞–∑–∏');
       if (saveBtn) saveBtn.click();
     });
    
         // 8. –ò–∑—á–∞–∫–∞–π –º–∞–ª–∫–æ –∏ –ø—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ –º–æ–¥–∞–ª—ä—Ç —Å–µ –∑–∞—Ç–≤–æ—Ä–∏ —Å–ª–µ–¥ –∑–∞–ø–∞–∑–≤–∞–Ω–µ
     console.log('üìã –ò–∑—á–∞–∫–≤–∞–º –¥–∞–ª–∏ –º–æ–¥–∞–ª—ä—Ç —Å–µ –∑–∞—Ç–≤–æ—Ä–∏ —Å–ª–µ–¥ –∑–∞–ø–∞–∑–≤–∞–Ω–µ...');
     await (page.waitForTimeout ? page.waitForTimeout(3000) : new Promise(resolve => setTimeout(resolve, 3000)));
     
     const modalClosed = await page.evaluate(() => {
       const modal = document.querySelector('form');
       return !modal;
     });
     
     if (modalClosed) {
       console.log('‚úÖ –ú–æ–¥–∞–ª—ä—Ç —Å–µ –∑–∞—Ç–≤–æ—Ä–∏ —Å–ª–µ–¥ –∑–∞–ø–∞–∑–≤–∞–Ω–µ');
     } else {
       console.log('‚ùå –ú–æ–¥–∞–ª—ä—Ç –Ω–µ —Å–µ –∑–∞—Ç–≤–æ—Ä–∏ —Å–ª–µ–¥ –∑–∞–ø–∞–∑–≤–∞–Ω–µ');
       console.log('‚ö†Ô∏è –¢–æ–≤–∞ –º–æ–∂–µ –¥–∞ –µ –ø—Ä–æ–±–ª–µ–º —Å –±—É—Ç–æ–Ω–∞ "–ó–∞–ø–∞–∑–∏"');
       
       // –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ –∏–º–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –≥—Ä–µ—à–∫–∞
       const errorMessage = await page.evaluate(() => {
         const errorDiv = document.querySelector('.text-red-500, .text-red-600, [class*="error"]');
         return errorDiv ? errorDiv.textContent.trim() : null;
       });
       
       if (errorMessage) {
         console.log(`‚ö†Ô∏è –ù–∞–º–µ—Ä–µ–Ω–æ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –≥—Ä–µ—à–∫–∞: "${errorMessage}"`);
       }
     }
    
    // 9. –°–ï–ì–ê - –ö–†–ò–¢–ò–ß–ù–ò–Ø–¢ –¢–ï–°–¢: –ö–ª–∏–∫–Ω–∏ –æ—Ç–Ω–æ–≤–æ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –í–ï–î–ù–ê–ì–ê
    console.log('\nüö® –ö–†–ò–¢–ò–ß–ï–ù –¢–ï–°–¢: –ö–ª–∏–∫–∞–º –æ—Ç–Ω–æ–≤–æ –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –≤–µ–¥–Ω–∞–≥–∞...');
    await page.evaluate(() => {
      // –¢—ä—Ä—Å–∏ –±—É—Ç–æ–Ω —Å Edit –∏–∫–æ–Ω–∞ –≤ —Ç–∞–±–ª–∏—Ü–∞—Ç–∞
      const tableButtons = Array.from(document.querySelectorAll('table button'));
      const editBtn = tableButtons.find(btn => {
        const svg = btn.querySelector('svg');
        return svg && btn.className.includes('text-blue-600') && !btn.className.includes('text-red-600');
      });
      if (editBtn) editBtn.click();
    });
    
    // 10. –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ –º–æ–¥–∞–ª—ä—Ç —Å–µ –æ—Ç–≤–æ—Ä–∏ –æ—Ç–Ω–æ–≤–æ
    await (page.waitForTimeout ? page.waitForTimeout(1000) : new Promise(resolve => setTimeout(resolve, 1000)));
    
    const modalReopened = await page.evaluate(() => {
      const modal = document.querySelector('form');
      return !!modal;
    });
    
    if (modalReopened) {
      console.log('‚úÖ –ú–æ–¥–∞–ª—ä—Ç —Å–µ –æ—Ç–≤–æ—Ä–∏ –æ—Ç–Ω–æ–≤–æ');
      
      // 11. –ò–∑—á–∞–∫–∞–π 1 –º–∏–Ω—É—Ç–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ —Å–µ –∑–∞—Ç–≤–∞—Ä—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ
      console.log('‚è∞ –ò–∑—á–∞–∫–≤–∞–º 1 –º–∏–Ω—É—Ç–∞ –∑–∞ –¥–∞ –≤–∏–¥—è –¥–∞–ª–∏ —Å–µ –∑–∞—Ç–≤–∞—Ä—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ...');
      await (page.waitForTimeout ? page.waitForTimeout(60000) : new Promise(resolve => setTimeout(resolve, 60000)));
      
      const modalStillOpen = await page.evaluate(() => {
        const modal = document.querySelector('form');
        return !!modal;
      });
      
      if (modalStillOpen) {
        console.log('‚úÖ –ú–æ–¥–∞–ª—ä—Ç –æ—Å—Ç–∞–≤–∞ –æ—Ç–≤–æ—Ä–µ–Ω - –ù–Ø–ú–ê –ø—Ä–æ–±–ª–µ–º!');
      } else {
        console.log('‚ùå –ü–†–û–ë–õ–ï–ú: –ú–æ–¥–∞–ª—ä—Ç —Å–µ –∑–∞—Ç–≤–æ—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ!');
        console.log('üö® –¢–æ–≤–∞ –µ race condition –ø—Ä–æ–±–ª–µ–º!');
      }
      
    } else {
      console.log('‚ùå –ú–æ–¥–∞–ª—ä—Ç –Ω–µ —Å–µ –æ—Ç–≤–æ—Ä–∏ –æ—Ç–Ω–æ–≤–æ');
    }
    
    // 12. –î–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–µ–Ω —Ç–µ—Å—Ç - –ø—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ –∏–º–∞ setTimeout –≤ –∫–æ–¥–∞
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º –∑–∞ setTimeout –≤ –∫–æ–¥–∞...');
    const hasSetTimeout = await page.evaluate(() => {
      const scripts = Array.from(document.querySelectorAll('script'));
      const pageContent = document.documentElement.outerHTML;
      return pageContent.includes('setTimeout') || pageContent.includes('setTimeout');
    });
    
    if (hasSetTimeout) {
      console.log('‚ö†Ô∏è –ù–∞–º–µ—Ä–µ–Ω setTimeout –≤ –∫–æ–¥–∞ - –º–æ–∂–µ –¥–∞ –ø—Ä–∏—á–∏–Ω—è–≤–∞ –ø—Ä–æ–±–ª–µ–º–∞');
    } else {
      console.log('‚úÖ –ù—è–º–∞ setTimeout –≤ –∫–æ–¥–∞');
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç—ä—Ç –∑–∞–≤—ä—Ä—à–∏!');
    
  } catch (error) {
    console.error('üí• –ì—Ä–µ—à–∫–∞:', error.message);
  } finally {
    await browser.close();
  }
}

testServiceEditing(); 