// üß™ –ü—Ä–æ—Å—Ç —Ç–µ—Å—Ç –∑–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏
const puppeteer = require('puppeteer');

async function testBookings() {
  console.log('üéØ –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏...');
  
  const browser = await puppeteer.launch({ 
    headless: false,
    slowMo: 100 
  });
  
  const page = await browser.newPage();
  await page.setViewport({ width: 1920, height: 1080 });
  
  try {
    // 1. –û—Ç–∏–¥–∏ –≤ login —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞
    console.log('üìã –û—Ç–∏–≤–∞–º –≤ login —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞...');
    await page.goto('http://localhost:3000/admin/login');
    await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
    
    // 2. –ü–æ–ø—ä–ª–Ω–∏ credentials
    console.log('üìã –ü–æ–ø—ä–ª–≤–∞–º credentials...');
    await page.type('input[name="username"]', 'admin');
    await page.type('input[name="password"]', 'admin123');
    
    // 3. –ö–ª–∏–∫–Ω–∏ Login
    console.log('üìã –ö–ª–∏–∫–∞–º Login...');
    await page.click('button[type="submit"]');
    await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
    console.log('‚úÖ –ö–ª–∏–∫–Ω–∞—Ö Login');
    
    // 4. –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ —Å–º–µ –≤ admin panel
    const title = await page.evaluate(() => {
      const h1 = document.querySelector('h1');
      return h1 ? h1.textContent : null;
    });
    
    console.log('üìã –ó–∞–≥–ª–∞–≤ie:', title);
    
    if (title && title.includes('–ê–¥–º–∏–Ω –ü–∞–Ω–µ–ª')) {
      console.log('‚úÖ Admin panel —Å–µ –∑–∞—Ä–µ–∂–¥–∞ —É—Å–ø–µ—à–Ω–æ');
    } else {
      console.log('‚ùå Admin panel –Ω–µ —Å–µ –∑–∞—Ä–µ–∂–¥–∞ –ø—Ä–∞–≤–∏–ª–Ω–æ');
      return;
    }
    
    // 3. –û—Ç–∏–¥–∏ –≤ —Å–µ–∫—Ü–∏—è –†–µ–∑–µ—Ä–≤–∞—Ü–∏–∏
    console.log('üìã –û—Ç–∏–≤–∞–º –≤ —Å–µ–∫—Ü–∏—è –†–µ–∑–µ—Ä–≤–∞—Ü–∏–∏...');
    
    // –ò–∑—á–∞–∫–∞–π –º–∞–ª–∫–æ –∑–∞ –¥–∞ —Å–µ –∑–∞—Ä–µ–¥—è—Ç –≤—Å–∏—á–∫–∏ –µ–ª–µ–º–µ–Ω—Ç–∏
    await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
    
    // –ü—Ä–æ–≤–µ—Ä–∏ –≤—Å–∏—á–∫–∏ –±—É—Ç–æ–Ω–∏
    const allButtons = await page.evaluate(() => {
      const buttons = Array.from(document.querySelectorAll('button'));
      return buttons.map(btn => btn.textContent);
    });
    console.log('üìã –ù–∞–º–µ—Ä–µ–Ω–∏ –±—É—Ç–æ–Ω–∏:', allButtons);
    
    // –ö–ª–∏–∫–Ω–∏ –Ω–∞ –ø—ä—Ä–≤–∏—è –±—É—Ç–æ–Ω "–†–µ–∑–µ—Ä–≤–∞—Ü–∏–∏"
    await page.evaluate(() => {
      const buttons = Array.from(document.querySelectorAll('button'));
      const bookingBtn = buttons.find(btn => btn.textContent.trim() === '–†–µ–∑–µ—Ä–≤–∞—Ü–∏–∏');
      if (bookingBtn) bookingBtn.click();
    });
    await (page.waitForTimeout ? page.waitForTimeout(1000) : new Promise(resolve => setTimeout(resolve, 1000)));
    console.log('‚úÖ –ö–ª–∏–∫–Ω–∞—Ö –Ω–∞ –±—É—Ç–æ–Ω "–†–µ–∑–µ—Ä–≤–∞—Ü–∏–∏"');
    
    // 4. –ö–ª–∏–∫–Ω–∏ "–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è"
    console.log('üìã –ö–ª–∏–∫–∞–º "–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è"...');
    await page.evaluate(() => {
      const buttons = Array.from(document.querySelectorAll('button'));
      const addBookingBtn = buttons.find(btn => btn.textContent.trim() === '–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è');
      if (addBookingBtn) addBookingBtn.click();
    });
    await (page.waitForTimeout ? page.waitForTimeout(1000) : new Promise(resolve => setTimeout(resolve, 1000)));
    console.log('‚úÖ –ö–ª–∏–∫–Ω–∞—Ö –Ω–∞ –±—É—Ç–æ–Ω "–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è"');
    
    // 5. –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ —Å–µ –æ—Ç–≤–æ—Ä–∏ –º–æ–¥–∞–ª
    const modal = await page.$('form');
    if (modal) {
      console.log('‚úÖ –ú–æ–¥–∞–ª—ä—Ç –∑–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è —Å–µ –æ—Ç–≤–æ—Ä–∏');
    } else {
      console.log('‚ùå –ú–æ–¥–∞–ª—ä—Ç –∑–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è –Ω–µ —Å–µ –æ—Ç–≤–æ—Ä–∏');
      return;
    }
    
    // 6. –ü–æ–ø—ä–ª–Ω–∏ —Ñ–æ—Ä–º–∞—Ç–∞
    console.log('üìã –ü–æ–ø—ä–ª–≤–∞–º —Ñ–æ—Ä–º–∞—Ç–∞...');
    
    // –ò–∑—á–∞–∫–∞–π –º–∞–ª–∫–æ –∑–∞ –¥–∞ —Å–µ –∑–∞—Ä–µ–¥–∏ —Ñ–æ—Ä–º–∞—Ç–∞
    await (page.waitForTimeout ? page.waitForTimeout(1000) : new Promise(resolve => setTimeout(resolve, 1000)));
    
    // –ò–º–µ - –∏–∑–ø–æ–ª–∑–≤–∞–π –ø–æ-—Å–ø–µ—Ü–∏—Ñ–∏—á–µ–Ω —Å–µ–ª–µ–∫—Ç–æ—Ä
    await page.evaluate(() => {
      const nameInput = document.querySelector('input[type="text"]');
      if (nameInput) nameInput.value = 'Test Patient';
    });
    
    // –¢–µ–ª–µ—Ñ–æ–Ω
    await page.evaluate(() => {
          const phoneInput = document.querySelector('input[type="tel"]');
    if (phoneInput) phoneInput.value = `+359888${Date.now()}`;
    });
    
    // –ò–º–µ–π–ª
    await page.evaluate(() => {
      const emailInput = document.querySelector('input[type="email"]');
      if (emailInput) emailInput.value = 'test@example.com';
    });
    
    // –£—Å–ª—É–≥–∞
    await page.evaluate(() => {
      const serviceSelect = document.querySelector('select');
      if (serviceSelect) serviceSelect.value = '1';
    });
    
    // –î–∞—Ç–∞
    await page.evaluate(() => {
      const dateInput = document.querySelector('input[type="date"]');
      if (dateInput) dateInput.value = '2024-12-31';
    });
    
    // –ß–∞—Å
    await page.evaluate(() => {
      const timeInput = document.querySelector('input[type="time"]');
      if (timeInput) timeInput.value = '14:00';
    });
    
    console.log('‚úÖ –§–æ—Ä–º–∞—Ç–∞ —Å–µ –ø–æ–ø—ä–ª–Ω–∏');
    
    // 7. –ö–ª–∏–∫–Ω–∏ "–ó–∞–ø–∞–∑–∏"
    console.log('üìã –ö–ª–∏–∫–∞–º "–ó–∞–ø–∞–∑–∏"...');
    await page.evaluate(() => {
      const buttons = Array.from(document.querySelectorAll('button'));
      const saveBtn = buttons.find(btn => btn.textContent.trim() === '–ó–∞–ø–∞–∑–∏');
      if (saveBtn) saveBtn.click();
    });
    await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
    console.log('‚úÖ –ö–ª–∏–∫–Ω–∞—Ö "–ó–∞–ø–∞–∑–∏"');
    
    // 8. –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞ —Å–µ —Å—ä–∑–¥–∞–¥–µ
    const bookingInList = await page.evaluate(() => {
      const elements = Array.from(document.querySelectorAll('*'));
      return elements.some(el => el.textContent.includes('Test Patient'));
    });
    
    if (bookingInList) {
      console.log('‚úÖ –†–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞ —Å–µ —Å—ä–∑–¥–∞–¥–µ —É—Å–ø–µ—à–Ω–æ!');
    } else {
      console.log('‚ùå –†–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞ –Ω–µ —Å–µ —Å—ä–∑–¥–∞–¥–µ');
    }
    
    console.log('\nüéâ –¢–µ—Å—Ç—ä—Ç –∑–∞–≤—ä—Ä—à–∏!');
    
  } catch (error) {
    console.error('üí• –ì—Ä–µ—à–∫–∞:', error.message);
  } finally {
    await browser.close();
  }
}

testBookings(); 