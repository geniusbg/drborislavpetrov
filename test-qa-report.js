const fs = require('fs');

console.log('üß™ –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ—Ç–æ –Ω–∞ QA –æ—Ç—á–µ—Ç...');

try {
  const report = {
    timestamp: new Date().toISOString(),
    testFiles: {},
    qaGuides: {},
    summary: {
      totalTests: 0,
      availableTests: 0,
      totalGuides: 0,
      availableGuides: 0
    }
  };

  // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ —Ç–µ—Å—Ç–æ–≤–∏—Ç–µ —Ñ–∞–π–ª–æ–≤–µ
  const testFiles = {
    'QA_AUTOMATED_TEST.js': '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–∞–Ω–∏ —Ç–µ—Å—Ç–æ–≤–µ (Puppeteer)',
    'TEST_HOMEPAGE.js': '–¢–µ—Å—Ç –Ω–∞ –Ω–∞—á–∞–ª–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞',
    'TEST_BOOKINGS.js': '–¢–µ—Å—Ç –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏',
    'TEST_CALENDAR.js': '–¢–µ—Å—Ç –Ω–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä'
  };

  for (const [file, description] of Object.entries(testFiles)) {
    const exists = fs.existsSync(file);
    report.testFiles[file] = {
      description,
      exists,
      size: exists ? fs.statSync(file).size : 0
    };
    report.summary.totalTests++;
    if (exists) report.summary.availableTests++;
  }

  // –ó–∞–ø–∏—Å–≤–∞–º–µ –æ—Ç—á–µ—Ç–∞
  fs.writeFileSync('qa_report.json', JSON.stringify(report, null, 2));
  
  console.log('‚úÖ QA –æ—Ç—á–µ—Ç—ä—Ç –µ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
  console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
  console.log(`   - –¢–µ—Å—Ç–æ–≤–µ: ${report.summary.availableTests}/${report.summary.totalTests}`);
  
} catch (error) {
  console.error('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ –æ—Ç—á–µ—Ç:', error.message);
} 