const { Pool } = require('pg')

const pool = new Pool({
  user: 'postgres',
  host: 'localhost',
  database: 'drborislavpetrov',
  password: 'postgres',
  port: 5432,
})

async function restoreTestData() {
  const client = await pool.connect()
  
  try {
    console.log('üîÑ Restoring test data...')
    
    // Add services
    console.log('üìù Adding services...')
    await client.query(`
      INSERT INTO services (name, duration, price) 
      VALUES 
      ('–ö–æ–Ω—Å—É–ª—Ç–∞—Ü–∏—è', 30, 50),
      ('–õ–µ—á–µ–Ω–∏–µ', 60, 100),
      ('–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞', 45, 75),
      ('–ï–∫—Å—Ç—Ä–µ–Ω–∞ –ø–æ–º–æ—â', 90, 150),
      ('–°–ª–µ–¥–æ–ø–∏—Ç', 30, 40)
      ON CONFLICT (name) DO NOTHING
    `)
    console.log('‚úÖ Services added')
    
    // Add users
    console.log('üìù Adding users...')
    await client.query(`
      INSERT INTO users (name, phone, email) 
      VALUES 
      ('–ù–∏–∫–æ–ª–∞–π –ü–µ—Ç—Ä–æ–≤', '+359988825195', 'geniuss0ft@yahoo.com'),
      ('–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞', '+359888123456', 'maria@example.com'),
      ('–ü–µ—Ç—ä—Ä –ì–µ–æ—Ä–≥–∏–µ–≤', '+359888123457', 'petar@example.com'),
      ('–ê–Ω–Ω–∞ –î–∏–º–∏—Ç—Ä–æ–≤–∞', '+359888123458', 'anna@example.com'),
      ('–°—Ç–µ—Ñ–∞–Ω –¢–æ–¥–æ—Ä–æ–≤', '+359888123459', 'stefan@example.com')
      ON CONFLICT (phone) DO NOTHING
    `)
    console.log('‚úÖ Users added')
    
    // Add bookings
    console.log('üìù Adding bookings...')
    await client.query(`
      INSERT INTO bookings (name, email, phone, service, serviceduration, date, time, status, treatment_notes) 
      VALUES 
      ('–ù–∏–∫–æ–ª–∞–π –ü–µ—Ç—Ä–æ–≤', 'geniuss0ft@yahoo.com', '+359988825195', 1, 30, '2025-08-02', '10:00', 'confirmed', '–ü—ä—Ä–≤–∞ —Å–µ—Å–∏—è - –ø–∞—Ü–∏–µ–Ω—Ç—ä—Ç —Å–µ —á—É–≤—Å—Ç–≤–∞ –¥–æ–±—Ä–µ'),
      ('–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞', 'maria@example.com', '+359888123456', 2, 60, '2025-08-02', '11:00', 'pending', '–í—Ç–æ—Ä–∞ —Å–µ—Å–∏—è - –Ω—É–∂–Ω–∏ —Å–∞ –¥–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–Ω–∏ –ø—Ä–æ—Ü–µ–¥—É—Ä–∏'),
      ('–ü–µ—Ç—ä—Ä –ì–µ–æ—Ä–≥–∏–µ–≤', 'petar@example.com', '+359888123457', 3, 45, '2025-08-02', '12:00', 'confirmed', '–¢—Ä–µ—Ç–∞ —Å–µ—Å–∏—è - –ª–µ—á–µ–Ω–∏–µ –∑–∞–≤—ä—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ'),
      ('–ê–Ω–Ω–∞ –î–∏–º–∏—Ç—Ä–æ–≤–∞', 'anna@example.com', '+359888123458', 4, 90, '2025-08-03', '09:00', 'pending', '–ï–∫—Å—Ç—Ä–µ–Ω–∞ –ø–æ–º–æ—â - –ø–∞—Ü–∏–µ–Ω—Ç—ä—Ç –≤ –∫—Ä–∏—Ç–∏—á–Ω–æ —Å—ä—Å—Ç–æ—è–Ω–∏–µ'),
      ('–°—Ç–µ—Ñ–∞–Ω –¢–æ–¥–æ—Ä–æ–≤', 'stefan@example.com', '+359888123459', 5, 30, '2025-08-03', '14:00', 'confirmed', '–°–ª–µ–¥–æ–ø–∏—Ç - –≤—Å–∏—á–∫–æ –Ω–∞—Ä–µ–¥')
      ON CONFLICT DO NOTHING
    `)
    console.log('‚úÖ Bookings added')
    
    // Check final state
    const bookingsCount = await client.query('SELECT COUNT(*) as count FROM bookings')
    const usersCount = await client.query('SELECT COUNT(*) as count FROM users')
    const servicesCount = await client.query('SELECT COUNT(*) as count FROM services')
    
    console.log('\nüìä Final database state:')
    console.log(`üìã Bookings: ${bookingsCount.rows[0].count}`)
    console.log(`üë• Users: ${usersCount.rows[0].count}`)
    console.log(`üõ†Ô∏è Services: ${servicesCount.rows[0].count}`)
    
  } catch (error) {
    console.error('‚ùå Error restoring test data:', error)
  } finally {
    client.release()
    await pool.end()
  }
}

restoreTestData() 