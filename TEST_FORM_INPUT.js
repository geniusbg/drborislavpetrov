// üß™ –¢–µ—Å—Ç –∑–∞ –≤—ä–≤–µ–∂–¥–∞–Ω–µ –≤ —Ñ–æ—Ä–º–∞—Ç–∞ –∑–∞ —É—Å–ª—É–≥–∏
const puppeteer = require('puppeteer');

async function testFormInput() {
  console.log('üéØ –¢–µ—Å—Ç–≤–∞–Ω–µ –Ω–∞ –≤—ä–≤–µ–∂–¥–∞–Ω–µ –≤ —Ñ–æ—Ä–º–∞—Ç–∞ –∑–∞ —É—Å–ª—É–≥–∏...');
  
  const browser = await puppeteer.launch({ 
    headless: false,
    slowMo: 100 
  });
  
  const page = await browser.newPage();
  await page.setViewport({ width: 1920, height: 1080 });
  
  try {
    // 1. Login
    console.log('üìã Login...');
    await page.goto('http://localhost:3000/admin/login');
    await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
    
    await page.type('input[name="username"]', 'admin');
    await page.type('input[name="password"]', 'admin123');
    await page.click('button[type="submit"]');
    await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
    
    // 2. –û—Ç–∏–¥–∏ –≤ —Å–µ–∫—Ü–∏—è –£—Å–ª—É–≥–∏
    console.log('üìã –û—Ç–∏–≤–∞–º –≤ —Å–µ–∫—Ü–∏—è –£—Å–ª—É–≥–∏...');
    await page.evaluate(() => {
      const buttons = Array.from(document.querySelectorAll('button'));
      const servicesBtn = buttons.find(btn => btn.textContent.trim() === '–£—Å–ª—É–≥–∏');
      if (servicesBtn) servicesBtn.click();
    });
    await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
    
    // 3. –û—Ç–≤–æ—Ä–∏ –º–æ–¥–∞–ª–∞ –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ
    console.log('üìã –û—Ç–≤–∞—Ä—è–º –º–æ–¥–∞–ª–∞ –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ...');
    await page.evaluate(() => {
      const tableButtons = Array.from(document.querySelectorAll('table button'));
      const editBtn = tableButtons.find(btn => {
        const svg = btn.querySelector('svg');
        return svg && btn.className.includes('text-blue-600') && !btn.className.includes('text-red-600');
      });
      if (editBtn) editBtn.click();
    });
    await (page.waitForTimeout ? page.waitForTimeout(1000) : new Promise(resolve => setTimeout(resolve, 1000)));
    
    // 4. –ü—Ä–æ–≤–µ—Ä–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª–Ω–∏—Ç–µ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏
    console.log('üìã –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º –æ—Ä–∏–≥–∏–Ω–∞–ª–Ω–∏—Ç–µ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏...');
    const originalValues = await page.evaluate(() => {
      const nameInput = document.querySelector('input[type="text"]');
      const durationInput = document.querySelector('input[type="number"]');
      const priceInput = document.querySelector('input[type="number"][step="0.01"]');
      
      return {
        name: nameInput ? nameInput.value : '',
        duration: durationInput ? durationInput.value : '',
        price: priceInput ? priceInput.value : ''
      };
    });
    
    console.log('üìã –û—Ä–∏–≥–∏–Ω–∞–ª–Ω–∏ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏:', originalValues);
    
    // 5. –ü–æ–ø—ä–ª–Ω–∏ —Ñ–æ—Ä–º–∞—Ç–∞ —Å page.type()
    console.log('üìã –ü–æ–ø—ä–ª–≤–∞–º —Ñ–æ—Ä–º–∞—Ç–∞ —Å page.type()...');
    
    // –ò–∑—á–∏—Å—Ç–∏ –∏ –ø–æ–ø—ä–ª–Ω–∏ –∏–º–µ
    await page.click('input[type="text"]');
    await page.keyboard.down('Control');
    await page.keyboard.press('A');
    await page.keyboard.up('Control');
    await page.type('input[type="text"]', 'Test Service Updated');
    
    // –ò–∑—á–∏—Å—Ç–∏ –∏ –ø–æ–ø—ä–ª–Ω–∏ –ø—Ä–æ–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ—Å—Ç
    await page.click('input[type="number"]');
    await page.keyboard.down('Control');
    await page.keyboard.press('A');
    await page.keyboard.up('Control');
    await page.type('input[type="number"]', '45');
    
    // –ò–∑—á–∏—Å—Ç–∏ –∏ –ø–æ–ø—ä–ª–Ω–∏ —Ü–µ–Ω–∞
    await page.click('input[type="number"][step="0.01"]');
    await page.keyboard.down('Control');
    await page.keyboard.press('A');
    await page.keyboard.up('Control');
    await page.type('input[type="number"][step="0.01"]', '99.99');
    
    // 6. –ü—Ä–æ–≤–µ—Ä–∏ –Ω–æ–≤–∏—Ç–µ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏
    console.log('üìã –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º –Ω–æ–≤–∏—Ç–µ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏...');
    const newValues = await page.evaluate(() => {
      const nameInput = document.querySelector('input[type="text"]');
      const durationInput = document.querySelector('input[type="number"]');
      const priceInput = document.querySelector('input[type="number"][step="0.01"]');
      
      return {
        name: nameInput ? nameInput.value : '',
        duration: durationInput ? durationInput.value : '',
        price: priceInput ? priceInput.value : ''
      };
    });
    
    console.log('üìã –ù–æ–≤–∏ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏:', newValues);
    
    // 7. –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ —Å—Ç–æ–π–Ω–æ—Å—Ç–∏—Ç–µ —Å–∞ —Å–µ –ø—Ä–æ–º–µ–Ω–∏–ª–∏
    if (newValues.name !== originalValues.name || 
        newValues.duration !== originalValues.duration || 
        newValues.price !== originalValues.price) {
      console.log('‚úÖ –°—Ç–æ–π–Ω–æ—Å—Ç–∏—Ç–µ —Å–∞ —Å–µ –ø—Ä–æ–º–µ–Ω–∏–ª–∏');
    } else {
      console.log('‚ùå –°—Ç–æ–π–Ω–æ—Å—Ç–∏—Ç–µ –Ω–µ —Å–∞ —Å–µ –ø—Ä–æ–º–µ–Ω–∏–ª–∏');
    }
    
    // 8. –ö–ª–∏–∫–Ω–∏ "–ó–∞–ø–∞–∑–∏"
    console.log('üìã –ö–ª–∏–∫–∞–º "–ó–∞–ø–∞–∑–∏"...');
    await page.evaluate(() => {
      const buttons = Array.from(document.querySelectorAll('button'));
      const saveBtn = buttons.find(btn => btn.textContent.trim() === '–ó–∞–ø–∞–∑–∏');
      if (saveBtn) saveBtn.click();
    });
    
    // 9. –ò–∑—á–∞–∫–∞–π –∏ –ø—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ –º–æ–¥–∞–ª—ä—Ç —Å–µ –∑–∞—Ç–≤–æ—Ä–∏
    console.log('üìã –ò–∑—á–∞–∫–≤–∞–º –¥–∞–ª–∏ –º–æ–¥–∞–ª—ä—Ç —Å–µ –∑–∞—Ç–≤–æ—Ä–∏...');
    await (page.waitForTimeout ? page.waitForTimeout(3000) : new Promise(resolve => setTimeout(resolve, 3000)));
    
    const modalClosed = await page.evaluate(() => {
      const modal = document.querySelector('form');
      return !modal;
    });
    
    if (modalClosed) {
      console.log('‚úÖ –ú–æ–¥–∞–ª—ä—Ç —Å–µ –∑–∞—Ç–≤–æ—Ä–∏ —Å–ª–µ–¥ –∑–∞–ø–∞–∑–≤–∞–Ω–µ');
    } else {
      console.log('‚ùå –ú–æ–¥–∞–ª—ä—Ç –Ω–µ —Å–µ –∑–∞—Ç–≤–æ—Ä–∏ —Å–ª–µ–¥ –∑–∞–ø–∞–∑–≤–∞–Ω–µ');
    }
    
  } catch (error) {
    console.error('üí• –ì—Ä–µ—à–∫–∞:', error.message);
  } finally {
    await browser.close();
  }
}

testFormInput(); 