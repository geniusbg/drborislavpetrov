"use strict";(()=>{var e={};e.id=105,e.ids=[105],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},2048:e=>{e.exports=require("fs")},5315:e=>{e.exports=require("path")},473:(e,s,t)=>{t.r(s),t.d(s,{originalPathname:()=>E,patchFetch:()=>h,requestAsyncStorage:()=>u,routeModule:()=>m,serverHooks:()=>p,staticGenerationAsyncStorage:()=>g});var a={};t.r(a),t.d(a,{POST:()=>c});var o=t(9303),n=t(8716),r=t(670),i=t(7070),l=t(3810);async function c(e){try{console.log("=== VOICE COMMAND API CALLED ===");let s=e.headers.get("x-admin-token");if(console.log("Admin token:",s),!s)return console.log("No admin token provided"),i.NextResponse.json({error:"Unauthorized"},{status:401});let t=await e.json();console.log("Received body:",t);let{voiceCommand:a,email:o}=t;console.log("Voice command:",a),console.log("Email:",o);let n=function(e){let s,t,a,o,n,r,i;let l=e.toLowerCase();console.log("Parsing command:",l),console.log("Original command:",e),console.log("Lower command:",l);let c="unknown";for(let t of[/(?:добави|създай|нов|регистрирай)\s+(?:потребител|клиент)\s+([а-яё\s]+?)(?:\s+(?:имейл|email|телефон|тел|phone|име|name))/i,/(?:добави|създай|нов|регистрирай)\s+(?:потребител|клиент)\s+([а-яё\s]+?)(?:\s|$)/i,/(?:промени|редактирай|измени|обнови)\s+(?:потребител|клиент)\s+([а-яё\s]+?)(?:\s+(?:имейл|email|телефон|тел|phone|име|name))/i,/(?:промени|редактирай|измени|обнови)\s+(?:потребител|клиент)\s+([а-яё\s]+?)(?:\s|$)/i,/(?:изтрий|премахни|удали)\s+(?:потребител|клиент)\s+([а-яё\s]+?)(?:\s+(?:имейл|email|телефон|тел|phone|име|name)|$)/i,/(?:запази|резервирай|направи|резервация)\s+(?:ми\s+)?(?:час|резервация)\s+(?:за|на)\s+([а-яё\s]+?)(?:\s+(?:за|на|от|в|в\s+|\d|август|септември|октомври|ноември|декември|януари|февруари|март|април|май|юни|юли))/i,/(?:за|на)\s+([а-яё\s]+?)(?:\s+(?:за|на|от|в|в\s+|\d|август|септември|октомври|ноември|декември|януари|февруари|март|април|май|юни|юли))/i,/(?:час|резервация)\s+(?:за|на)\s+([а-яё\s]+?)(?:\s+(?:за|на|от|в|в\s+|\d|август|септември|октомври|ноември|декември|януари|февруари|март|април|май|юни|юли))/i,/^([а-яё\s]+?)\s+(?:за|на|от|в|в\s+|\d|август|септември|октомври|ноември|декември|януари|февруари|март|април|май|юни|юли)/i]){let a=e.match(t);if(console.log("Trying name pattern:",t,"match:",a),a){console.log("Found patient name:",s=a[1].trim(),"from pattern:",t);break}}let d=["добави потребител","създай потребител","нов потребител","регистрирай потребител","добави клиент","създай клиент","нов клиент","add user","create user","new user","register user"],m=["промени потребител","редактирай потребител","измени потребител","обнови потребител","промени клиент","редактирай клиент","измени клиент","обнови клиент","update user","edit user","modify user","change user"],u=["изтрий потребител","премахни потребител","удали потребител","изтрий клиент","премахни клиент","удали клиент","delete user","remove user","erase user"];if(console.log("Checking action keywords in command:",l),console.log("Checking createUserKeywords:",d),console.log("Checking updateUserKeywords:",m),console.log("Checking deleteUserKeywords:",u),d.some(e=>l.includes(e))?(c="create_user",console.log("Detected create_user action from keywords")):m.some(e=>l.includes(e))?(c="update_user",console.log("Detected update_user action from keywords")):u.some(e=>l.includes(e))?(c="delete_user",console.log("Detected delete_user action from keywords")):["провери","свободни часове","налични часове","свободно време","налично време","кога е свободно","кога има час","покажи часове","свободни слотове"].some(e=>l.includes(e))?(c="check_availability",console.log("Detected check_availability action from keywords")):["запази","резервирай","направи резервация","създай резервация","добави резервация","резервация","час","запази час","резервирай час","резервация за"].some(e=>l.includes(e))?(c="create_booking",console.log("Detected create_booking action from keywords")):["промени резервация","редактирай резервация","измени резервация","обнови резервация"].some(e=>l.includes(e))?(c="update_booking",console.log("Detected update_booking action from keywords")):["изтрий резервация","отмени резервация","премахни резервация","удали резервация"].some(e=>l.includes(e))?(c="delete_booking",console.log("Detected delete_booking action from keywords")):(console.log("No action keywords found in command"),console.log("Command:",l),console.log("updateUserKeywords:",m),console.log("Checking each keyword:"),m.forEach(e=>{console.log(`  "${e}" in command: ${l.includes(e)}`)})),console.log("Final action detected:",c),"unknown"===c&&(s||t||a||o)&&(c="create_booking",console.log("Assuming create_booking action based on extracted data")),"create_booking"===c||"update_booking"===c||"delete_booking"===c||"check_availability"===c||"unknown"===c)for(let e of[/(\d{1,2})\s+(?:януари|февруари|март|април|май|юни|юли|август|септември|октомври|ноември|декември)/,/(?:на|за)\s+(\d{1,2})\s+(?:януари|февруари|март|април|май|юни|юли|август|септември|октомври|ноември|декември)/,/(?:първи|втори|трети|четвърти|пети|шести|седми|осми|девети|десети|единадесети|дванадесети|тринадесети|четиринадесети|петнадесети|шестнадесети|седемнадесети|осемнадесети|деветнадесети|двадесети|двадесет\s+и\s+първи)\s+(?:януари|февруари|март|април|май|юни|юли|август|септември|октомври|ноември|декември)/,/(?:за|на)\s+(?:първи|втори|трети|четвърти|пети|шести|седми|осми|девети|десети|единадесети|дванадесети|тринадесети|четиринадесети|петнадесети|шестнадесети|седемнадесети|осемнадесети|деветнадесети|двадесети|двадесет\s+и\s+първи|двадесет\s+и\s+втори|двадесет\s+и\s+трети|двадесет\s+и\s+четвърти|двадесет\s+и\s+пети|двадесет\s+и\s+шести|двадесет\s+и\s+седми|двадесет\s+и\s+осми|двадесет\s+и\s+девети|двадесет\s+и\s+десети|тридесети|тридесет\s+и\s+първи)\s+(?:януари|февруари|март|април|май|юни|юли|август|септември|октомври|ноември|декември)/]){let s=l.match(e);if(console.log("Trying date pattern:",e,"match:",s),s&&s[1]){let a=s[1],o=l.match(/(?:януари|февруари|март|април|май|юни|юли|август|септември|октомври|ноември|декември)/)?.[0];if(console.log("Extracted day:",a,"month:",o),a&&o){let s;let n={януари:0,февруари:1,март:2,април:3,май:4,юни:5,юли:6,август:7,септември:8,октомври:9,ноември:10,декември:11},r={първи:1,втори:2,трети:3,четвърти:4,пети:5,шести:6,седми:7,осми:8,девети:9,десети:10,единадесети:11,дванадесети:12,тринадесети:13,четиринадесети:14,петнадесети:15,шестнадесети:16,седемнадесети:17,осемнадесети:18,деветнадесети:19,двадесети:20,"двадесет и първи":21,"двадесет и втори":22,"двадесет и трети":23,"двадесет и четвърти":24,"двадесет и пети":25,"двадесет и шести":26,"двадесет и седми":27,"двадесет и осми":28,"двадесет и девети":29,"двадесет и десети":30,тридесети:30,"тридесет и първи":31};r[a]?(s=r[a],console.log("Using ordinal mapping for day:",a,"->",s)):(s=parseInt(a),console.log("Using numeric parsing for day:",a,"->",s));let i=n[o],l=new Date().getFullYear(),c=new Date(l,i,s);c<new Date&&c.setFullYear(l+1),console.log("Found date:",t=c.toISOString().split("T")[0],"from pattern:",e,"day:",a,"month:",o,"dayNumber:",s,"monthNumber:",i);break}}}for(let e of[/(?:от|в|в\s+|до)(\d{1,2}):(\d{2})/,/(?:от|в|в\s+|до)(\d{1,2})\s+часа/,/(?:от|в|в\s+|до)(\d{1,2}):(\d{2})\s+часа/,/(\d{1,2}):(\d{2})/,/(\d{1,2})\s+часа/]){let s=l.match(e);if(s&&s[1]){if(s[2]){let e=s[1].padStart(2,"0"),t=s[2].padStart(2,"0");a=`${e}:${t}`}else{let e=s[1].padStart(2,"0");a=`${e}:00`}console.log("Found time:",a,"from pattern:",e);break}}for(let e of[/(\d{3}\s*\d{3}\s*\d{3})/,/(\d{10})/,/(\+359\s*\d{3}\s*\d{3}\s*\d{3})/,/(\d{3}-\d{3}-\d{3})/,/телефон\s*(\d{3}\s*\d{3}\s*\d{3})/,/тел\s*(\d{3}\s*\d{3}\s*\d{3})/,/телефон\s*((?:\d\s*){10})/,/тел\s*((?:\d\s*){10})/,/((?:\d\s*){10})/]){let s=l.match(e);if(s&&s[1]){9===(n=s[1].replace(/[\s\-]/g,"")).length&&(n.startsWith("8")||n.startsWith("9"))?n="+359"+n:10===n.length&&n.startsWith("0")&&(n="+359"+n.substring(1)),console.log("Found phone:",n,"from pattern:",e);break}}for(let e of(console.log("Extracting email from command:",l),[/(?:имейл|email)\s+([а-яё\s]+)\s+([a-zA-Z0-9.-]+)\s+([a-zA-Z]{2,})/,/([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})/,/email\s+([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})/,/имейл\s+([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})/,/([a-zA-Z0-9._%+-]+)\s+at\s+([a-zA-Z0-9.-]+)\s+dot\s+([a-zA-Z]{2,})/,/([a-zA-Z0-9._%+-]+)\s+@\s+([a-zA-Z0-9.-]+)\s+\.\s+([a-zA-Z]{2,})/])){let s=l.match(e);if(console.log("Trying email pattern:",e,"match:",s),s&&s[1]){console.log("Email match found:",s),console.log("Found email:",r=4===s.length?`${s[1]}@${s[2]}.${s[3]}`:3===s.length&&s[2]&&s[3]?`${s[1].replace(/\s+/g,"")}@${s[2]}.${s[3]}`:s[1],"from pattern:",e);break}}if(!r){console.log("No email found with patterns, trying manual extraction"),console.log("Command to extract from:",l);let e=l.match(/имейл\s+([а-яё\s]+)\s+([a-zA-Z0-9.-]+)\s+([a-zA-Z]{2,})/);if(console.log("Email match result:",e),e){let s=e[1].replace(/\s+/g,"");for(let[t,a]of(console.log("Original name:",e[1],"Cleaned name:",s),Object.entries({а:"a",б:"b",в:"v",г:"g",д:"d",е:"e",ё:"yo",ж:"zh",з:"z",и:"i",й:"y",к:"k",л:"l",м:"m",н:"n",о:"o",п:"p",р:"r",с:"s",т:"t",у:"u",ф:"f",х:"h",ц:"ts",ч:"ch",ш:"sh",щ:"sht",ъ:"a",ь:"",ю:"yu",я:"ya",кльомба:"klomba",маймунско:"majmunsko",маймунска:"majmunska",маймунски:"majmunski",кльомби:"klombi",кльомбо:"klombo"})))s=s.replace(RegExp(t,"g"),a);console.log("Final email:",r=`${s}@${e[2]}.${e[3]}`)}}for(let e of(s&&(s=s.split(" ").map(e=>e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()).join(" ")),[/потребител\s*(\d+)/,/ID\s*(\d+)/,/номер\s*(\d+)/,/(\d+)\s*потребител/])){let s=l.match(e);if(s&&s[1]){console.log("Found user ID:",i=s[1],"from pattern:",e);break}}for(let e of[/(?:за|на)\s+(почистване|преглед|лечение|отбелязване|ортодонтия|кариес|зъби|почистване на зъби|лечение на зъби|преглед на зъби)/,/(?:почистване|преглед|лечение|отбелязване|ортодонтия|кариес|зъби|почистване на зъби|лечение на зъби|преглед на зъби)/]){let s=l.match(e);if(s){console.log("Found service:",o=s[1]||s[0],"from pattern:",e);break}}return console.log("Parsed command:",{action:c,patientName:s,date:t,time:a,service:o}),{action:c,patientName:s,phone:n,email:r,date:t,time:a,service:o,userId:i,message:`Разбрах: ${"create_booking"===c?"създаване на резервация":"update_booking"===c?"редактиране на резервация":"delete_booking"===c?"изтриване на резервация":"create_user"===c?"създаване на потребител":"update_user"===c?"редактиране на потребител":"delete_user"===c?"изтриване на потребител":"неизвестна команда"}`}}(a);console.log("Parsed command:",n),o&&(n.email=o),console.log("Final command:",n);let r=await d(n);return console.log("Execute result:",r),i.NextResponse.json({success:!0,message:r.message,parsedCommand:n,result:r})}catch(e){return console.error("Voice command error:",e),i.NextResponse.json({error:"Internal server error",details:e instanceof Error?e.message:"Unknown error"},{status:500})}}async function d(e){let s=await (0,l.N)();if("check_availability"===e.action){let t=e.date;t||(t=new Date().toISOString().split("T")[0]);let a=await s.all(`
      SELECT * FROM bookings 
      WHERE date = ? AND status != 'cancelled'
      ORDER BY time
    `,[t]),o=new Map((await s.all("SELECT * FROM services WHERE isActive = 1")).map(e=>[e.id,e.duration])),n=[];for(let e of["09:00","09:30","10:00","10:30","11:00","11:30","12:00","12:30","13:00","13:30","14:00","14:30","15:00","15:30","16:00","16:30"]){let s=!0;for(let t of a){let a=t.time,n=o.get(t.service)||30,[r,i]=a.split(":").map(Number),l=new Date(2e3,0,1,r,i+n),c=`${l.getHours().toString().padStart(2,"0")}:${l.getMinutes().toString().padStart(2,"0")}`,[d,m]=e.split(":").map(Number),u=new Date(2e3,0,1,d,m+30),g=`${u.getHours().toString().padStart(2,"0")}:${u.getMinutes().toString().padStart(2,"0")}`;if(e<c&&g>a){s=!1;break}}s&&n.push(e)}let r=new Date(t).toLocaleDateString("bg-BG");if(0===n.length)return{success:!0,message:`На ${r} няма свободни часове. Всички часове са заети.`,availableSlots:[],targetDate:t};{let e=n.slice(0,8).join(", "),s=n.length>8?` и още ${n.length-8} часа`:"";return{success:!0,message:`Свободни часове на ${r}: ${e}${s}. Общо ${n.length} свободни часа.`,availableSlots:n,targetDate:t,dateStr:r}}}if("create_booking"===e.action){if(!e.patientName||!e.date||!e.time)return{success:!1,message:"Липсва информация за резервацията. Нужни са: име, дата и час."};let t=1;if(e.service&&(t=({почистване:2,преглед:1,лечение:3,отбелязване:4,ортодонтия:5,кариес:3,зъби:2})[e.service]||1),await s.get(`
      SELECT * FROM bookings 
      WHERE date = ? AND time = ? AND status != 'cancelled'
    `,[e.date,e.time]))return{success:!1,message:`Този час (${e.time}) на ${e.date} вече е зает.`};let a="+359888000000";if(e.phone)a=e.phone;else{let e=Date.now(),s=Math.floor(1e3*Math.random()).toString().padStart(3,"0");a=`+359888${e.toString().slice(-6)}${s}`}let o=await s.get("SELECT * FROM users WHERE LOWER(name) = LOWER(?)",[e.patientName]);if(console.log("Searching for user with name:",e.patientName),console.log("Found user:",o),console.log("All users in database:",(await s.all("SELECT * FROM users")).map(e=>({id:e.id,name:e.name}))),o){let t=[],n=[];if(e.phone&&e.phone!==o.phone){if(await s.get("SELECT * FROM users WHERE phone = ? AND id != ?",[e.phone,o.id]))return{success:!1,message:`Потребител с телефон ${e.phone} вече съществува.`};await s.run("UPDATE bookings SET phone = ? WHERE phone = ?",[e.phone,o.phone]),t.push("phone = ?"),n.push(e.phone)}e.email&&e.email!==o.email&&(t.push("email = ?"),n.push(e.email)),t.length>0&&(n.push(o.id),await s.run(`UPDATE users SET ${t.join(", ")} WHERE id = ?`,n),e.phone&&(o.phone=e.phone),e.email&&(o.email=e.email),console.log("Updated user:",o)),a=o.phone}else console.log("Created new user:",o={id:(await s.run(`
        INSERT INTO users (name, phone, email)
        VALUES (?, ?, ?)
      `,[e.patientName,a,e.email||null])).lastID,name:e.patientName,phone:a,email:e.email||null});try{return await s.run(`
        INSERT INTO bookings (name, phone, service, date, time, status)
        VALUES (?, ?, ?, ?, ?, 'pending')
      `,[e.patientName,o.phone,t,e.date,e.time]),{success:!0,message:`Резервацията е създадена успешно за ${e.patientName} на ${e.date} в ${e.time}. Потребител: ${o.name}, Телефон: ${o.phone}`}}catch(e){return console.error("Voice command error:",e),{success:!1,message:`Грешка при създаване на резервацията: ${e instanceof Error?e.message:"Неизвестна грешка"}`}}}if("create_user"===e.action){if(!e.patientName)return{success:!1,message:"Липсва име на потребителя."};let t=e.phone||"+359888000000";return await s.get("SELECT * FROM users WHERE phone = ?",[t])?{success:!1,message:`Потребител с телефон ${t} вече съществува.`}:(await s.run(`
      INSERT INTO users (name, phone, email)
      VALUES (?, ?, ?)
    `,[e.patientName,t,e.email||null]),{success:!0,message:`Потребителят ${e.patientName} е създаден успешно. Телефон: ${t}`})}if("update_user"===e.action){let t;if(!e.userId&&!e.patientName)return{success:!1,message:"Липсва ID или име на потребителя за редактиране."};if(!(t=e.userId?await s.get("SELECT * FROM users WHERE id = ?",[e.userId]):await s.get("SELECT * FROM users WHERE LOWER(name) = LOWER(?)",[e.patientName])))return{success:!1,message:"Потребителят не е намерен."};let a=[],o=[];if(e.patientName&&e.patientName!==t.name&&(a.push("name = ?"),o.push(e.patientName)),e.phone&&e.phone!==t.phone){if(await s.get("SELECT * FROM users WHERE phone = ? AND id != ?",[e.phone,t.id]))return{success:!1,message:`Потребител с телефон ${e.phone} вече съществува.`};await s.run("UPDATE bookings SET phone = ? WHERE phone = ?",[e.phone,t.phone]),a.push("phone = ?"),o.push(e.phone)}return(e.email&&e.email!==t.email&&(a.push("email = ?"),o.push(e.email)),0===a.length)?{success:!1,message:"Няма промени за прилагане."}:(o.push(t.id),await s.run(`UPDATE users SET ${a.join(", ")} WHERE id = ?`,o),{success:!0,message:`Потребителят ${t.name} е обновен успешно.`})}if("delete_user"===e.action){let t;if(!e.userId&&!e.patientName)return{success:!1,message:"Липсва ID или име на потребителя за изтриване."};if(!(t=e.userId?await s.get("SELECT * FROM users WHERE id = ?",[e.userId]):await s.get("SELECT * FROM users WHERE LOWER(name) = LOWER(?)",[e.patientName])))return{success:!1,message:"Потребителят не е намерен."};let a=await s.all("SELECT * FROM bookings WHERE phone = ?",[t.phone]),o=a.length>0,n=a.some(e=>e.treatment_notes);if(o){let e=a.filter(e=>"pending"===e.status).length,s=a.filter(e=>"confirmed"===e.status).length;if(e>0||s>0)return{success:!1,message:`Потребителят ${t.name} има ${e>0?"чакащи":""}${e>0&&s>0?" и ":""}${s>0?"потвърдени":""} резервации и не може да бъде изтрит.`};if(n)return{success:!1,message:`Потребителят ${t.name} има бележки за лечението. Сигурни ли сте, че искате да го изтриете? Изпратете командата отново за потвърждение.`}}return await s.run("DELETE FROM users WHERE id = ?",[t.id]),{success:!0,message:`Потребителят ${t.name} е изтрит успешно.`}}return{success:!1,message:"Командата не е имплементирана все още."}}let m=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/admin/voice-commands/route",pathname:"/api/admin/voice-commands",filename:"route",bundlePath:"app/api/admin/voice-commands/route"},resolvedPagePath:"C:\\Users\\genius\\Downloads\\drborislavpetrov\\src\\app\\api\\admin\\voice-commands\\route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:u,staticGenerationAsyncStorage:g,serverHooks:p}=m,E="/api/admin/voice-commands/route";function h(){return(0,r.patchFetch)({serverHooks:p,staticGenerationAsyncStorage:g})}},3810:(e,s,t)=>{t.d(s,{N:()=>i});let a=require("sqlite3");var o=t.n(a),n=t(6360);let r=null;async function i(){return r||(r=await (0,n.bA)({filename:"./bookings.db",driver:o().Database}),await r.exec(`
      CREATE TABLE IF NOT EXISTS bookings (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        email TEXT,
        phone TEXT NOT NULL,
        service INTEGER NOT NULL,
        date TEXT NOT NULL,
        time TEXT NOT NULL,
        message TEXT,
        status TEXT DEFAULT 'pending' CHECK (status IN ('pending', 'confirmed', 'cancelled')),
        createdAt DATETIME DEFAULT CURRENT_TIMESTAMP
      )
    `),await r.exec(`
      CREATE TABLE IF NOT EXISTS users (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        email TEXT,
        phone TEXT UNIQUE NOT NULL,
        address TEXT,
        notes TEXT,
        createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,
        updatedAt DATETIME DEFAULT CURRENT_TIMESTAMP
      )
    `),await r.exec(`
      CREATE TABLE IF NOT EXISTS services (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        name TEXT NOT NULL,
        description TEXT,
        duration INTEGER NOT NULL DEFAULT 30,
        price REAL,
        isActive BOOLEAN DEFAULT 1,
        createdAt DATETIME DEFAULT CURRENT_TIMESTAMP
      )
    `),0===(await r.get("SELECT COUNT(*) as count FROM services")).count&&await r.exec(`
        INSERT INTO services (name, description, duration, price) VALUES
        ('Преглед и консултация', 'Основен преглед на зъбите и консултация', 30, 50.00),
        ('Почистване и профилактика', 'Професионално почистване на зъбен камък', 45, 80.00),
        ('Лечение на кариес', 'Лечение на кариес с модерни материали', 60, 120.00),
        ('Отбелязване', 'Професионално отбелязване на зъбите', 90, 200.00),
        ('Ортодонтия', 'Консултация за ортодонтски лечение', 45, 100.00)
      `)),r}}};var s=require("../../../../webpack-runtime.js");s.C(e);var t=e=>s(s.s=e),a=s.X(0,[948,972,360],()=>t(473));module.exports=a})();