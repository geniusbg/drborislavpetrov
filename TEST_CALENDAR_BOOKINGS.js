const puppeteer = require('puppeteer');

async function checkAndRestoreAdminToken(page) {
  const adminToken = await page.evaluate(() => {
    const adminToken = localStorage.getItem('adminToken');
    return !!adminToken;
  });
  
  if (!adminToken) {
    console.log('üìã Admin token –µ –∏–∑–≥—É–±–µ–Ω, –æ–ø–∏—Ç–≤–∞–º –¥–∞ —Å–µ –ª–æ–≥–Ω–∞ –æ—Ç–Ω–æ–≤–æ...');
    await page.goto('http://localhost:3000/admin/login', { waitUntil: 'networkidle0' });
    await page.type('input[name="username"]', 'admin');
    await page.type('input[name="password"]', 'admin123');
    await page.click('button[type="submit"]');
    await (page.waitForTimeout ? page.waitForTimeout(3000) : new Promise(resolve => setTimeout(resolve, 3000)));
    
    // –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ —Å–µ –ª–æ–≥–Ω–∞—Ö–º–µ —É—Å–ø–µ—à–Ω–æ
    const isLoggedInAgain = await page.evaluate(() => {
      const adminToken = localStorage.getItem('adminToken');
      return !!adminToken;
    });
    
    if (isLoggedInAgain) {
      console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ —Å–µ –ª–æ–≥–Ω–∞—Ö –æ—Ç–Ω–æ–≤–æ');
      await page.goto('http://localhost:3000/admin', { waitUntil: 'networkidle0' });
      await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
    } else {
      console.log('‚ùå –ù–µ—É—Å–ø–µ—à–Ω–æ –ª–æ–≥–≤–∞–Ω–µ');
    }
  }
}

async function testCalendarBookings() {
  console.log('üéØ –ü—ä–ª–µ–Ω —Ç–µ—Å—Ç –∑–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏ –ø—Ä–µ–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä–∞...');
  
  const browser = await puppeteer.launch({ 
    headless: false, 
    defaultViewport: null,
    args: ['--start-maximized']
  });
  
  const page = await browser.newPage();
  
  // Enable console logging
  page.on('console', msg => console.log('üìã Browser console:', msg.text()));
  
  try {
    // 1. Login
    console.log('üìã Login...');
    await page.goto('http://localhost:3000/admin/login', { waitUntil: 'networkidle0' });
    
    // –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞ —Å–µ –∑–∞—Ä–µ–¥–∏ –ø—Ä–∞–≤–∏–ª–Ω–æ
    const pageTitle = await page.title();
    console.log('üìã Page title:', pageTitle);
    
    // –ò–∑—á–∞–∫–∞–π –º–∞–ª–∫–æ –∑–∞ –¥–∞ —Å–µ –∑–∞—Ä–µ–¥–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞
    await (page.waitForTimeout ? page.waitForTimeout(3000) : new Promise(resolve => setTimeout(resolve, 3000)));
    
    // –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ –∏–º–∞ login —Ñ–æ—Ä–º–∞
    const loginFormExists = await page.evaluate(() => {
      const form = document.querySelector('form');
      const usernameInput = document.querySelector('input[name="username"]');
      const passwordInput = document.querySelector('input[name="password"]');
      return !!(form && usernameInput && passwordInput);
    });
    
    if (!loginFormExists) {
      throw new Error('‚ùå Login —Ñ–æ—Ä–º–∞—Ç–∞ –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω–∞');
    }
    
    console.log('‚úÖ Login —Ñ–æ—Ä–º–∞—Ç–∞ –µ –Ω–∞–º–µ—Ä–µ–Ω–∞');
    
    await page.type('input[name="username"]', 'admin');
    await page.type('input[name="password"]', 'admin123');
    await page.click('button[type="submit"]');
    await (page.waitForTimeout ? page.waitForTimeout(3000) : new Promise(resolve => setTimeout(resolve, 3000)));
    
    // –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ —Å–µ –ª–æ–≥–Ω–∞—Ö–º–µ —É—Å–ø–µ—à–Ω–æ
    const isLoggedIn = await page.evaluate(() => {
      const adminToken = localStorage.getItem('adminToken');
      return !!adminToken;
    });
    
    if (!isLoggedIn) {
      throw new Error('‚ùå –ù–µ—É—Å–ø–µ—à–Ω–æ –ª–æ–≥–≤–∞–Ω–µ');
    }
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –ª–æ–≥–≤–∞–Ω–µ - admin token –Ω–∞–ª–∏—á–µ–Ω');
    
    // 2. –û—Ç–∏–¥–∏ –≤ —Å–µ–∫—Ü–∏—è –ö–∞–ª–µ–Ω–¥–∞—Ä
    console.log('üìã –û—Ç–∏–≤–∞–º –≤ —Å–µ–∫—Ü–∏—è –ö–∞–ª–µ–Ω–¥–∞—Ä...');
    await page.goto('http://localhost:3000/admin', { waitUntil: 'networkidle0' });
    await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
    
    // –ö–ª–∏–∫–Ω–∏ –≤—ä—Ä—Ö—É —Ç–∞–± –ö–∞–ª–µ–Ω–¥–∞—Ä
    await page.evaluate(() => {
      const buttons = Array.from(document.querySelectorAll('button'));
      const calendarBtn = buttons.find(btn => btn.textContent.includes('–ö–∞–ª–µ–Ω–¥–∞—Ä'));
      if (calendarBtn) {
        console.log('–ù–∞–º–µ—Ä–µ–Ω –±—É—Ç–æ–Ω –ö–∞–ª–µ–Ω–¥–∞—Ä, –∫–ª–∏–∫–≤–∞–º...');
        calendarBtn.click();
      }
    });
    await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
    
    console.log('üìã –¢–µ–∫—É—â–∞ —Å–µ–∫—Ü–∏—è: –ö–∞–ª–µ–Ω–¥–∞—Ä');
    
    // 3. –¢–ï–°–¢ 1: –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è —á—Ä–µ–∑ –±—É—Ç–æ–Ω –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–∞—Ç–∞ –∫–ª–µ—Ç–∫–∞
    console.log('\nüß™ –¢–ï–°–¢ 1: –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è —á—Ä–µ–∑ –±—É—Ç–æ–Ω –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–∞—Ç–∞ –∫–ª–µ—Ç–∫–∞');
    
    // –ù–∞–º–µ—Ä–∏ –∏ –∫–ª–∏–∫–Ω–∏ –±—É—Ç–æ–Ω "–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è" –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–∞—Ç–∞ –∫–ª–µ—Ç–∫–∞
    const addBookingBtn = await page.evaluate(() => {
      const buttons = Array.from(document.querySelectorAll('button'));
      const addBtn = buttons.find(btn => btn.textContent.includes('–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è'));
      if (addBtn) {
        addBtn.click();
        return true;
      }
      return false;
    });
    
    if (addBookingBtn) {
      console.log('‚úÖ –ë—É—Ç–æ–Ω—ä—Ç "–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è" –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–∞—Ç–∞ –∫–ª–µ—Ç–∫–∞ –µ –∫–ª–∏–∫–Ω–∞—Ç');
      
      // –ò–∑—á–∞–∫–∞–π —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞ —Å–µ –æ—Ç–≤–æ—Ä–∏
      await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
      
      // –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ —Ñ–æ—Ä–º–∞—Ç–∞ —Å–µ –æ—Ç–≤–æ—Ä–∏
      const formOpened = await page.evaluate(() => {
        const form = document.querySelector('form');
        const timeInput = document.querySelector('input[name="time"]');
        return !!(form && timeInput);
      });
      
      if (formOpened) {
        console.log('‚úÖ –§–æ—Ä–º–∞—Ç–∞ –∑–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è —Å–µ –æ—Ç–≤–æ—Ä–∏');
        console.log('üìã –ü–æ–ø—ä–ª–≤–∞–º —Ñ–æ—Ä–º–∞—Ç–∞ –∑–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è –æ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–∞—Ç–∞ –∫–ª–µ—Ç–∫–∞...');
        
        // –ü–æ–ø—ä–ª–Ω–∏ —Ñ–æ—Ä–º–∞—Ç–∞
        console.log('üìã –ü–æ–ø—ä–ª–≤–∞–º –ø–æ–ª–µ—Ç–∞—Ç–∞ —Å Puppeteer...');
        
        // Debug –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –ø–æ–ª–µ—Ç–∞—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–∞
        const formFields = await page.evaluate(() => {
          const form = document.querySelector('form');
          if (!form) return null;
          
          const inputs = form.querySelectorAll('input, select, textarea');
          const fields = [];
          
          inputs.forEach(input => {
            fields.push({
              name: input.name,
              type: input.type,
              tagName: input.tagName,
              value: input.value
            });
          });
          
          console.log('üìã Form fields:', fields);
          return fields;
        });
        
        console.log('üìã Form fields debug:', formFields);
        
        // –ü–æ–ø—ä–ª–Ω–∏ –¥–∞—Ç–∞
        await page.click('input[name="date"]');
        await page.keyboard.down('Control');
        await page.keyboard.press('KeyA');
        await page.keyboard.up('Control');
        const tomorrow = new Date();
        tomorrow.setDate(tomorrow.getDate() + 1);
        const year = tomorrow.getFullYear();
        const month = String(tomorrow.getMonth() + 1).padStart(2, '0');
        const day = String(tomorrow.getDate()).padStart(2, '0');
        const tomorrowStr = `${year}-${month}-${day}`;
        console.log('üìã Tomorrow date:', tomorrowStr);
        await page.type('input[name="date"]', tomorrowStr);
        await (page.waitForTimeout ? page.waitForTimeout(500) : new Promise(resolve => setTimeout(resolve, 500)));
        
        // –ü–æ–ø—ä–ª–Ω–∏ —á–∞—Å
        await page.click('input[name="time"]');
        await page.keyboard.down('Control');
        await page.keyboard.press('KeyA');
        await page.keyboard.up('Control');
        await page.type('input[name="time"]', '10:00');
        await (page.waitForTimeout ? page.waitForTimeout(500) : new Promise(resolve => setTimeout(resolve, 500)));
        
        // –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ –≤—Ä–µ–º–µ—Ç–æ —Å–µ –ø–æ–ø—ä–ª–Ω–∏ –ø—Ä–∞–≤–∏–ª–Ω–æ
        const timeValue = await page.evaluate(() => {
          const timeInput = document.querySelector('input[name="time"]');
          return timeInput ? timeInput.value : '';
        });
        console.log('üìã Time value after typing:', timeValue);
        
        // –ü–æ–ø—ä–ª–Ω–∏ –∏–º–µ
        await page.click('input[name="name"]');
        await page.keyboard.down('Control');
        await page.keyboard.press('KeyA');
        await page.keyboard.up('Control');
        await page.type('input[name="name"]', '–¢–µ—Å—Ç –ö–ª–∏–µ–Ω—Ç 1');
        await (page.waitForTimeout ? page.waitForTimeout(500) : new Promise(resolve => setTimeout(resolve, 500)));
        
        // –ü–æ–ø—ä–ª–Ω–∏ —Ç–µ–ª–µ—Ñ–æ–Ω
        await page.click('input[name="phone"]');
        await page.keyboard.down('Control');
        await page.keyboard.press('KeyA');
        await page.keyboard.up('Control');
        await page.type('input[name="phone"]', `+359888${Date.now()}`);
        await (page.waitForTimeout ? page.waitForTimeout(500) : new Promise(resolve => setTimeout(resolve, 500)));
        
        // –ü–æ–ø—ä–ª–Ω–∏ —É—Å–ª—É–≥–∞ - –æ–ø–∏—Ç–∞–π —Ä–∞–∑–ª–∏—á–Ω–∏ –∏–º–µ–Ω–∞ –Ω–∞ –ø–æ–ª–µ—Ç–æ
        try {
          await page.select('select[name="serviceId"]', '1');
        } catch (e) {
          try {
            await page.select('select[name="service"]', '1');
          } catch (e2) {
            console.log('üìã –ù–µ –º–æ–∂–µ –¥–∞ —Å–µ –Ω–∞–º–µ—Ä–∏ service select –ø–æ–ª–µ—Ç–æ');
          }
        }
        await (page.waitForTimeout ? page.waitForTimeout(500) : new Promise(resolve => setTimeout(resolve, 500)));
        
        // –ü–æ–ø—ä–ª–Ω–∏ —Å—ä–æ–±—â–µ–Ω–∏–µ
        await page.click('textarea[name="message"]');
        await page.keyboard.down('Control');
        await page.keyboard.press('KeyA');
        await page.keyboard.up('Control');
        await page.type('textarea[name="message"]', '–¢–µ—Å—Ç —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è –æ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–∞—Ç–∞ –∫–ª–µ—Ç–∫–∞');
        await (page.waitForTimeout ? page.waitForTimeout(500) : new Promise(resolve => setTimeout(resolve, 500)));
        
        // Debug –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –¥–∞–Ω–Ω–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–∞
        const formData = await page.evaluate(() => {
          const form = document.querySelector('form');
          if (!form) return null;
          
          const formData = new FormData(form);
          const data = {};
          for (let [key, value] of formData.entries()) {
            data[key] = value;
          }
          
          console.log('üìã Form data:', data);
          return data;
        });
        
        console.log('üìã Form data debug:', formData);
        
        await (page.waitForTimeout ? page.waitForTimeout(1000) : new Promise(resolve => setTimeout(resolve, 1000)));
        console.log('‚úÖ –§–æ—Ä–º–∞—Ç–∞ –µ –ø–æ–ø—ä–ª–Ω–µ–Ω–∞ –æ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–∞—Ç–∞ –∫–ª–µ—Ç–∫–∞');
        
        // –ó–∞–ø–∞–∑–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞
        console.log('üìã –ó–∞–ø–∞–∑–≤–∞–º —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞...');
        
        // –î–æ–±–∞–≤–∏ listener –∑–∞ network –∑–∞—è–≤–∫–∏
        page.on('response', async (response) => {
          if (response.url().includes('/api/admin/bookings') && response.request().method() === 'POST') {
            console.log('üìã API –æ—Ç–≥–æ–≤–æ—Ä –∑–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è:', response.status());
            try {
              const responseText = await response.text();
              console.log('üìã API –æ—Ç–≥–æ–≤–æ—Ä —Ç–µ–∫—Å—Ç:', responseText);
            } catch (e) {
              console.log('üìã –ù–µ –º–æ–∂–µ –¥–∞ —Å–µ –ø—Ä–æ—á–µ—Ç–µ API –æ—Ç–≥–æ–≤–æ—Ä–∞');
            }
          }
        });
        
        // Debug –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∑–∞ –±—É—Ç–æ–Ω–∏—Ç–µ
        const buttonInfo = await page.evaluate(() => {
          const buttons = Array.from(document.querySelectorAll('button'));
          const saveButtons = buttons.filter(btn => btn.textContent.includes('–ó–∞–ø–∞–∑–∏'));
          
          console.log('üìã –í—Å–∏—á–∫–∏ –±—É—Ç–æ–Ω–∏:', buttons.map(btn => ({ text: btn.textContent, type: btn.type })));
          console.log('üìã Save –±—É—Ç–æ–Ω–∏:', saveButtons.map(btn => ({ text: btn.textContent, type: btn.type })));
          
          return {
            totalButtons: buttons.length,
            saveButtons: saveButtons.length,
            saveButtonTexts: saveButtons.map(btn => btn.textContent)
          };
        });
        
        console.log('üìã Button debug info:', buttonInfo);
        
        await page.evaluate(() => {
          const buttons = Array.from(document.querySelectorAll('button'));
          const saveBtn = buttons.find(btn => btn.textContent.includes('–ó–∞–ø–∞–∑–∏') && btn.type === 'submit');
          if (saveBtn) {
            console.log('üìã –ù–∞–º–µ—Ä–µ–Ω save –±—É—Ç–æ–Ω:', saveBtn.textContent, saveBtn.type);
            saveBtn.click();
            console.log('üìã Save –±—É—Ç–æ–Ω—ä—Ç –µ –∫–ª–∏–∫–Ω–∞—Ç');
          } else {
            console.log('üìã Save –±—É—Ç–æ–Ω—ä—Ç –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω');
            // –û–ø–∏—Ç–∞–π –¥–∞ –∫–ª–∏–∫–Ω–µ—à –ø—ä—Ä–≤–∏—è –±—É—Ç–æ–Ω —Å—ä—Å "–ó–∞–ø–∞–∑–∏"
            const anySaveBtn = buttons.find(btn => btn.textContent.includes('–ó–∞–ø–∞–∑–∏'));
            if (anySaveBtn) {
              console.log('üìã –ö–ª–∏–∫–≤–∞–º –∞–ª—Ç–µ—Ä–Ω–∞—Ç–∏–≤–µ–Ω save –±—É—Ç–æ–Ω:', anySaveBtn.textContent);
              anySaveBtn.click();
            }
          }
        });
        
        // –ò–∑—á–∞–∫–∞–π –¥–∞ —Å–µ –∑–∞–ø–∞–∑–∏
        await (page.waitForTimeout ? page.waitForTimeout(3000) : new Promise(resolve => setTimeout(resolve, 3000)));
        
        // –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞ —Å–µ –∑–∞–ø–∞–∑–∏ —É—Å–ø–µ—à–Ω–æ
        const bookingSaved = await page.evaluate(() => {
          // –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ —Ñ–æ—Ä–º–∞—Ç–∞ —Å–µ –∑–∞—Ç–≤–æ—Ä–∏ (–∑–Ω–∞–∫, —á–µ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞ —Å–µ –∑–∞–ø–∞–∑–∏)
          const form = document.querySelector('form');
          const modal = document.querySelector('[role="dialog"]');
          const errorMessage = document.querySelector('.text-red-500, .text-red-600');
          
          console.log('üìã Form exists:', !!form);
          console.log('üìã Modal exists:', !!modal);
          console.log('üìã Error message exists:', !!errorMessage);
          
          if (errorMessage) {
            console.log('üìã Error message text:', errorMessage.textContent);
          }
          
          return !form && !modal;
        });
        
        if (bookingSaved) {
          console.log('‚úÖ –†–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞ –µ –∑–∞–ø–∞–∑–µ–Ω–∞ –æ—Ç –∫–∞–ª–µ–Ω–¥–∞—Ä–Ω–∞—Ç–∞ –∫–ª–µ—Ç–∫–∞');
        } else {
          console.log('‚ùå –†–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞ –Ω–µ —Å–µ –∑–∞–ø–∞–∑–∏ —É—Å–ø–µ—à–Ω–æ');
        }
      } else {
        console.log('‚ùå –§–æ—Ä–º–∞—Ç–∞ –∑–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è –Ω–µ —Å–µ –æ—Ç–≤–æ—Ä–∏');
      }
    } else {
      console.log('‚ùå –ë—É—Ç–æ–Ω—ä—Ç "–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è" –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ admin token —Å–ª–µ–¥ –¢–µ—Å—Ç 1
    console.log('üìã –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º admin token —Å–ª–µ–¥ –¢–µ—Å—Ç 1...');
    await checkAndRestoreAdminToken(page);
    
    // 4. –¢–ï–°–¢ 2: –û—Ç–≤–∞—Ä—è–Ω–µ –Ω–∞ DailySchedule –º–æ–¥–∞–ª
    console.log('\nüß™ –¢–ï–°–¢ 2: –û—Ç–≤–∞—Ä—è–Ω–µ –Ω–∞ DailySchedule –º–æ–¥–∞–ª');
    
    await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
    
    // –ö–ª–∏–∫–Ω–∏ –≤—ä—Ä—Ö—É –¥–∞—Ç–∞ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–∞
    const dailyScheduleOpened = await page.evaluate(() => {
      const cells = document.querySelectorAll('.cursor-pointer');
      for (let cell of cells) {
        if (!cell.classList.contains('bg-blue-100') && 
            !cell.classList.contains('bg-green-100') && 
            !cell.classList.contains('bg-yellow-100') && 
            !cell.classList.contains('bg-red-100')) {
          cell.click();
          return true;
        }
      }
      return false;
    });
    
    if (dailyScheduleOpened) {
      await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
      
      // –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ DailySchedule –º–æ–¥–∞–ª—ä—Ç —Å–µ –æ—Ç–≤–æ—Ä–∏
      const modalOpened = await page.evaluate(() => {
        const modal = document.querySelector('[role="dialog"]');
        const title = document.querySelector('h2');
        const timeline = document.querySelector('.timeline');
        const workingHours = document.querySelector('.working-hours');
        
        console.log('Modal found:', !!modal);
        console.log('Title found:', !!title);
        console.log('Timeline found:', !!timeline);
        console.log('Working hours found:', !!workingHours);
        
        return !!(modal && title && timeline);
      });
      
      if (modalOpened) {
        console.log('‚úÖ DailySchedule –º–æ–¥–∞–ª—ä—Ç —Å–µ –æ—Ç–≤–æ—Ä–∏');
      } else {
        console.log('‚ùå DailySchedule –º–æ–¥–∞–ª—ä—Ç –Ω–µ —Å–µ –æ—Ç–≤–æ—Ä–∏');
      }
    } else {
      console.log('‚ùå –ù–µ –º–æ–∂–µ –¥–∞ —Å–µ –Ω–∞–º–µ—Ä–∏ —Å–≤–æ–±–æ–¥–Ω–∞ –∫–ª–µ—Ç–∫–∞ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–∞');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ admin token —Å–ª–µ–¥ –¢–µ—Å—Ç 2
    console.log('üìã –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º admin token —Å–ª–µ–¥ –¢–µ—Å—Ç 2...');
    await checkAndRestoreAdminToken(page);
    
    // 5. –¢–ï–°–¢ 3: –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è —á—Ä–µ–∑ –±—É—Ç–æ–Ω "–ù–æ–≤–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è"
    console.log('\nüß™ –¢–ï–°–¢ 3: –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è —á—Ä–µ–∑ –±—É—Ç–æ–Ω "–ù–æ–≤–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è"');
    
    const newBookingBtn = await page.evaluate(() => {
      const buttons = Array.from(document.querySelectorAll('button'));
      const newBtn = buttons.find(btn => btn.textContent.includes('–ù–æ–≤–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è'));
      if (newBtn) {
        newBtn.click();
        return true;
      }
      return false;
    });
    
    if (newBookingBtn) {
      console.log('‚úÖ –ë—É—Ç–æ–Ω—ä—Ç "–ù–æ–≤–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è" –µ –∫–ª–∏–∫–Ω–∞—Ç');
      
      await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
      
      // –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ —Ñ–æ—Ä–º–∞—Ç–∞ —Å–µ –æ—Ç–≤–æ—Ä–∏
      const formOpened = await page.evaluate(() => {
        const form = document.querySelector('form');
        const timeInput = document.querySelector('input[name="time"]');
        return !!(form && timeInput);
      });
      
      if (formOpened) {
        console.log('‚úÖ –§–æ—Ä–º–∞—Ç–∞ –∑–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è —Å–µ –æ—Ç–≤–æ—Ä–∏ –æ—Ç –±—É—Ç–æ–Ω–∞ "–ù–æ–≤–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è"');
        console.log('üìã –ü–æ–ø—ä–ª–≤–∞–º —Ñ–æ—Ä–º–∞—Ç–∞ –∑–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è –æ—Ç –±—É—Ç–æ–Ω–∞ "–ù–æ–≤–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è"...');
        
        // –ü–æ–ø—ä–ª–Ω–∏ —Ñ–æ—Ä–º–∞—Ç–∞
        await page.evaluate(() => {
          // –ü–æ–ø—ä–ª–Ω–∏ –¥–∞—Ç–∞
          const dateInput = document.querySelector('input[name="date"]');
          if (dateInput) {
            const tomorrow = new Date();
            tomorrow.setDate(tomorrow.getDate() + 1);
            const tomorrowStr = tomorrow.toISOString().split('T')[0];
            dateInput.value = tomorrowStr;
            dateInput.dispatchEvent(new Event('input', { bubbles: true }));
            dateInput.dispatchEvent(new Event('change', { bubbles: true }));
          }
          
          // –ü–æ–ø—ä–ª–Ω–∏ —á–∞—Å
          const timeInput = document.querySelector('input[name="time"]');
          if (timeInput) {
            timeInput.value = '11:00';
            timeInput.dispatchEvent(new Event('input', { bubbles: true }));
            timeInput.dispatchEvent(new Event('change', { bubbles: true }));
          }
          
          // –ü–æ–ø—ä–ª–Ω–∏ –∏–º–µ
          const nameInput = document.querySelector('input[name="name"]');
          if (nameInput) {
            nameInput.value = '–¢–µ—Å—Ç –ö–ª–∏–µ–Ω—Ç 2';
            nameInput.dispatchEvent(new Event('input', { bubbles: true }));
            nameInput.dispatchEvent(new Event('change', { bubbles: true }));
          }
          
          // –ü–æ–ø—ä–ª–Ω–∏ —Ç–µ–ª–µ—Ñ–æ–Ω
          const phoneInput = document.querySelector('input[name="phone"]');
          if (phoneInput) {
            phoneInput.value = `+359888${Date.now()}`;
            phoneInput.dispatchEvent(new Event('input', { bubbles: true }));
            phoneInput.dispatchEvent(new Event('change', { bubbles: true }));
          }
          
          // –ü–æ–ø—ä–ª–Ω–∏ —É—Å–ª—É–≥–∞
          const serviceSelect = document.querySelector('select[name="serviceId"]');
          if (serviceSelect && serviceSelect.options.length > 1) {
            serviceSelect.value = serviceSelect.options[1].value;
            serviceSelect.dispatchEvent(new Event('change', { bubbles: true }));
          }
          
          // –ü–æ–ø—ä–ª–Ω–∏ —É—Å–ª—É–≥–∞ (–∞–ª—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ –∏–º–µ –Ω–∞ –ø–æ–ª–µ—Ç–æ)
          const serviceSelectAlt = document.querySelector('select[name="service"]');
          if (serviceSelectAlt && serviceSelectAlt.options.length > 1) {
            serviceSelectAlt.value = serviceSelectAlt.options[1].value;
            serviceSelectAlt.dispatchEvent(new Event('change', { bubbles: true }));
          }
          
          // –ü–æ–ø—ä–ª–Ω–∏ —Å—ä–æ–±—â–µ–Ω–∏–µ
          const messageInput = document.querySelector('textarea[name="message"]');
          if (messageInput) {
            messageInput.value = '–¢–µ—Å—Ç —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è –æ—Ç –±—É—Ç–æ–Ω–∞ "–ù–æ–≤–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è"';
            messageInput.dispatchEvent(new Event('input', { bubbles: true }));
            messageInput.dispatchEvent(new Event('change', { bubbles: true }));
          }
        });
        
        await (page.waitForTimeout ? page.waitForTimeout(1000) : new Promise(resolve => setTimeout(resolve, 1000)));
        console.log('‚úÖ –§–æ—Ä–º–∞—Ç–∞ –µ –ø–æ–ø—ä–ª–Ω–µ–Ω–∞ –æ—Ç –±—É—Ç–æ–Ω–∞ "–ù–æ–≤–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è"');
        
        // –ó–∞–ø–∞–∑–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞
        console.log('üìã –ó–∞–ø–∞–∑–≤–∞–º —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞ –æ—Ç –±—É—Ç–æ–Ω–∞ "–ù–æ–≤–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è"...');
        
        await page.evaluate(() => {
          const buttons = Array.from(document.querySelectorAll('button'));
          const saveBtn = buttons.find(btn => btn.textContent.includes('–ó–∞–ø–∞–∑–∏') && btn.type === 'submit');
          if (saveBtn) {
            saveBtn.click();
          }
        });
        
        await (page.waitForTimeout ? page.waitForTimeout(3000) : new Promise(resolve => setTimeout(resolve, 3000)));
        
        // –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞ —Å–µ –∑–∞–ø–∞–∑–∏ —É—Å–ø–µ—à–Ω–æ
        const bookingSaved = await page.evaluate(() => {
          const form = document.querySelector('form');
          const modal = document.querySelector('[role="dialog"]');
          const errorMessage = document.querySelector('.text-red-500, .text-red-600');
          
          console.log('üìã Form exists (Test 3):', !!form);
          console.log('üìã Modal exists (Test 3):', !!modal);
          console.log('üìã Error message exists (Test 3):', !!errorMessage);
          
          if (errorMessage) {
            console.log('üìã Error message text (Test 3):', errorMessage.textContent);
          }
          
          return !form && !modal;
        });
        
        if (bookingSaved) {
          console.log('‚úÖ –†–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞ –µ –∑–∞–ø–∞–∑–µ–Ω–∞ –æ—Ç –±—É—Ç–æ–Ω–∞ "–ù–æ–≤–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è"');
        } else {
          console.log('‚ùå –†–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞ –Ω–µ —Å–µ –∑–∞–ø–∞–∑–∏ —É—Å–ø–µ—à–Ω–æ');
        }
      } else {
        console.log('‚ùå –§–æ—Ä–º–∞—Ç–∞ –∑–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è –Ω–µ —Å–µ –æ—Ç–≤–æ—Ä–∏ –æ—Ç –±—É—Ç–æ–Ω–∞ "–ù–æ–≤–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è"');
      }
    } else {
      console.log('‚ùå –ë—É—Ç–æ–Ω—ä—Ç "–ù–æ–≤–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è" –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω');
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ admin token —Å–ª–µ–¥ –¢–µ—Å—Ç 3
    console.log('üìã –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º admin token —Å–ª–µ–¥ –¢–µ—Å—Ç 3...');
    await checkAndRestoreAdminToken(page);
    
    // 6. –¢–ï–°–¢ 4: –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è —á—Ä–µ–∑ –±—É—Ç–æ–Ω "–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è" –≤ —Å–ø–∏—Å—ä–∫–∞
    console.log('\nüß™ –¢–ï–°–¢ 4: –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è —á—Ä–µ–∑ –±—É—Ç–æ–Ω "–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è" –≤ —Å–ø–∏—Å—ä–∫–∞');
    
    const addBookingListBtn = await page.evaluate(() => {
      const buttons = Array.from(document.querySelectorAll('button'));
      const addBtn = buttons.find(btn => btn.textContent.includes('–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è') && !btn.closest('.calendar'));
      if (addBtn) {
        addBtn.click();
        return true;
      }
      return false;
    });
    
    if (addBookingListBtn) {
      console.log('‚úÖ –ë—É—Ç–æ–Ω—ä—Ç "–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è" –≤ —Å–ø–∏—Å—ä–∫–∞ –µ –∫–ª–∏–∫–Ω–∞—Ç');
      
      await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
      
      // –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ —Ñ–æ—Ä–º–∞—Ç–∞ —Å–µ –æ—Ç–≤–æ—Ä–∏
      const formOpened = await page.evaluate(() => {
        const form = document.querySelector('form');
        const timeInput = document.querySelector('input[name="time"]');
        return !!(form && timeInput);
      });
      
      if (formOpened) {
        console.log('‚úÖ –§–æ—Ä–º–∞—Ç–∞ –∑–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è —Å–µ –æ—Ç–≤–æ—Ä–∏ –æ—Ç –±—É—Ç–æ–Ω–∞ "–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è" –≤ —Å–ø–∏—Å—ä–∫–∞');
        console.log('üìã –ü–æ–ø—ä–ª–≤–∞–º —Ñ–æ—Ä–º–∞—Ç–∞ –∑–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è –æ—Ç –±—É—Ç–æ–Ω–∞ "–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è" –≤ —Å–ø–∏—Å—ä–∫–∞...');
        
        // –ü–æ–ø—ä–ª–Ω–∏ —Ñ–æ—Ä–º–∞—Ç–∞
        await page.evaluate(() => {
          // –ü–æ–ø—ä–ª–Ω–∏ –¥–∞—Ç–∞
          const dateInput = document.querySelector('input[name="date"]');
          if (dateInput) {
            const tomorrow = new Date();
            tomorrow.setDate(tomorrow.getDate() + 1);
            const tomorrowStr = tomorrow.toISOString().split('T')[0];
            dateInput.value = tomorrowStr;
            dateInput.dispatchEvent(new Event('input', { bubbles: true }));
            dateInput.dispatchEvent(new Event('change', { bubbles: true }));
          }
          
          // –ü–æ–ø—ä–ª–Ω–∏ —á–∞—Å
          const timeInput = document.querySelector('input[name="time"]');
          if (timeInput) {
            timeInput.value = '12:00';
            timeInput.dispatchEvent(new Event('input', { bubbles: true }));
            timeInput.dispatchEvent(new Event('change', { bubbles: true }));
          }
          
          // –ü–æ–ø—ä–ª–Ω–∏ –∏–º–µ
          const nameInput = document.querySelector('input[name="name"]');
          if (nameInput) {
            nameInput.value = '–¢–µ—Å—Ç –ö–ª–∏–µ–Ω—Ç 3';
            nameInput.dispatchEvent(new Event('input', { bubbles: true }));
            nameInput.dispatchEvent(new Event('change', { bubbles: true }));
          }
          
          // –ü–æ–ø—ä–ª–Ω–∏ —Ç–µ–ª–µ—Ñ–æ–Ω
          const phoneInput = document.querySelector('input[name="phone"]');
          if (phoneInput) {
            phoneInput.value = `+359888${Date.now()}`;
            phoneInput.dispatchEvent(new Event('input', { bubbles: true }));
            phoneInput.dispatchEvent(new Event('change', { bubbles: true }));
          }
          
          // –ü–æ–ø—ä–ª–Ω–∏ —É—Å–ª—É–≥–∞
          const serviceSelect = document.querySelector('select[name="serviceId"]');
          if (serviceSelect && serviceSelect.options.length > 1) {
            serviceSelect.value = serviceSelect.options[1].value;
            serviceSelect.dispatchEvent(new Event('change', { bubbles: true }));
          }
          
          // –ü–æ–ø—ä–ª–Ω–∏ —É—Å–ª—É–≥–∞ (–∞–ª—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ –∏–º–µ –Ω–∞ –ø–æ–ª–µ—Ç–æ)
          const serviceSelectAlt = document.querySelector('select[name="service"]');
          if (serviceSelectAlt && serviceSelectAlt.options.length > 1) {
            serviceSelectAlt.value = serviceSelectAlt.options[1].value;
            serviceSelectAlt.dispatchEvent(new Event('change', { bubbles: true }));
          }
          
          // –ü–æ–ø—ä–ª–Ω–∏ —Å—ä–æ–±—â–µ–Ω–∏–µ
          const messageInput = document.querySelector('textarea[name="message"]');
          if (messageInput) {
            messageInput.value = '–¢–µ—Å—Ç —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è –æ—Ç –±—É—Ç–æ–Ω–∞ "–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è" –≤ —Å–ø–∏—Å—ä–∫–∞';
            messageInput.dispatchEvent(new Event('input', { bubbles: true }));
            messageInput.dispatchEvent(new Event('change', { bubbles: true }));
          }
        });
        
        await (page.waitForTimeout ? page.waitForTimeout(1000) : new Promise(resolve => setTimeout(resolve, 1000)));
        console.log('‚úÖ –§–æ—Ä–º–∞—Ç–∞ –µ –ø–æ–ø—ä–ª–Ω–µ–Ω–∞ –æ—Ç –±—É—Ç–æ–Ω–∞ "–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è" –≤ —Å–ø–∏—Å—ä–∫–∞');
        
        // –ó–∞–ø–∞–∑–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞
        console.log('üìã –ó–∞–ø–∞–∑–≤–∞–º —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞ –æ—Ç –±—É—Ç–æ–Ω–∞ "–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è" –≤ —Å–ø–∏—Å—ä–∫–∞...');
        
        await page.evaluate(() => {
          const buttons = Array.from(document.querySelectorAll('button'));
          const saveBtn = buttons.find(btn => btn.textContent.includes('–ó–∞–ø–∞–∑–∏') && btn.type === 'submit');
          if (saveBtn) {
            saveBtn.click();
          }
        });
        
        await (page.waitForTimeout ? page.waitForTimeout(3000) : new Promise(resolve => setTimeout(resolve, 3000)));
        
        // –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞ —Å–µ –∑–∞–ø–∞–∑–∏ —É—Å–ø–µ—à–Ω–æ
        const bookingSaved = await page.evaluate(() => {
          const form = document.querySelector('form');
          const modal = document.querySelector('[role="dialog"]');
          const errorMessage = document.querySelector('.text-red-500, .text-red-600');
          
          console.log('üìã Form exists (Test 4):', !!form);
          console.log('üìã Modal exists (Test 4):', !!modal);
          console.log('üìã Error message exists (Test 4):', !!errorMessage);
          
          if (errorMessage) {
            console.log('üìã Error message text (Test 4):', errorMessage.textContent);
          }
          
          return !form && !modal;
        });
        
        if (bookingSaved) {
          console.log('‚úÖ –†–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞ –µ –∑–∞–ø–∞–∑–µ–Ω–∞ –æ—Ç –±—É—Ç–æ–Ω–∞ "–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è" –≤ —Å–ø–∏—Å—ä–∫–∞');
        } else {
          console.log('‚ùå –†–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞ –Ω–µ —Å–µ –∑–∞–ø–∞–∑–∏ —É—Å–ø–µ—à–Ω–æ');
        }
      } else {
        console.log('‚ùå –§–æ—Ä–º–∞—Ç–∞ –∑–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è –Ω–µ —Å–µ –æ—Ç–≤–æ—Ä–∏ –æ—Ç –±—É—Ç–æ–Ω–∞ "–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è" –≤ —Å–ø–∏—Å—ä–∫–∞');
      }
    } else {
      console.log('‚ùå –ë—É—Ç–æ–Ω—ä—Ç "–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è" –≤ —Å–ø–∏—Å—ä–∫–∞ –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω');
    }
    
    // 7. –¢–ï–°–¢ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—ä–∑–¥–∞–¥–µ–Ω–∏—Ç–µ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏
    console.log('\nüß™ –¢–ï–°–¢ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—ä–∑–¥–∞–¥–µ–Ω–∏—Ç–µ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏');
    
    // –û—Ç–≤–æ—Ä–∏ –æ—Ç–Ω–æ–≤–æ DailySchedule –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞
    console.log('üìã –û—Ç–≤–∞—Ä—è–º –æ—Ç–Ω–æ–≤–æ DailySchedule –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏—Ç–µ...');
    
    const dailyScheduleReopened = await page.evaluate(() => {
      const cells = document.querySelectorAll('.cursor-pointer');
      for (let cell of cells) {
        if (!cell.classList.contains('bg-blue-100') && 
            !cell.classList.contains('bg-green-100') && 
            !cell.classList.contains('bg-yellow-100') && 
            !cell.classList.contains('bg-red-100')) {
          cell.click();
          return true;
        }
      }
      return false;
    });
    
    if (dailyScheduleReopened) {
      await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
      
      // –ü—Ä–æ–≤–µ—Ä–∏ –±—Ä–æ—è —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏
      const bookingCounts = await page.evaluate(() => {
        const timelineBookings = document.querySelectorAll('.timeline .booking');
        const listBookings = document.querySelectorAll('.booking-list .booking');
        
        return {
          timeline: timelineBookings.length,
          list: listBookings.length
        };
      });
      
      console.log(`‚úÖ Timeline –ø–æ–∫–∞–∑–≤–∞ ${bookingCounts.timeline} —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏`);
      console.log(`‚úÖ –°–ø–∏—Å—ä–∫—ä—Ç –ø–æ–∫–∞–∑–≤–∞ ${bookingCounts.list} —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏`);
    } else {
      console.log('‚ùå –ù–µ –º–æ–∂–µ –¥–∞ —Å–µ –æ—Ç–≤–æ—Ä–∏ DailySchedule –∑–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞');
    }
    
    // 8. –¢–ï–°–¢ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–≤–æ–±–æ–¥–Ω–∏ —á–∞—Å–æ–≤–µ –∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∏
    console.log('\nüß™ –¢–ï–°–¢ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–≤–æ–±–æ–¥–Ω–∏ —á–∞—Å–æ–≤–µ –∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∏');
    
    // –û–ø–∏—Ç–∞–π –¥–∞ —Å—ä–∑–¥–∞–¥–µ—à —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è –≤ —Å—ä—â–∏—è —á–∞—Å –∫–∞—Ç–æ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â–∞
    console.log('üìã –¢–µ—Å—Ç–≤–∞–º —Å—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è –≤ –∑–∞–µ—Ç —á–∞—Å...');
    
    const conflictTest = await page.evaluate(() => {
      const buttons = Array.from(document.querySelectorAll('button'));
      const addBtn = buttons.find(btn => btn.textContent.includes('–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è'));
      if (addBtn) {
        addBtn.click();
        return true;
      }
      return false;
    });
    
    if (conflictTest) {
      await (page.waitForTimeout ? page.waitForTimeout(2000) : new Promise(resolve => setTimeout(resolve, 2000)));
      
      // –ü–æ–ø—ä–ª–Ω–∏ —Ñ–æ—Ä–º–∞—Ç–∞ —Å—ä—Å —Å—ä—â–∏—è —á–∞—Å –∫–∞—Ç–æ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è
      await page.evaluate(() => {
        const dateInput = document.querySelector('input[name="date"]');
        const timeInput = document.querySelector('input[name="time"]');
        const nameInput = document.querySelector('input[name="name"]');
        const serviceSelect = document.querySelector('select[name="service"]');
        
        if (dateInput) {
          const tomorrow = new Date();
          tomorrow.setDate(tomorrow.getDate() + 1);
          const tomorrowStr = tomorrow.toISOString().split('T')[0];
          dateInput.value = tomorrowStr;
        }
        
        if (timeInput) {
          timeInput.value = '10:00'; // –°—ä—â–∏—è—Ç —á–∞—Å –∫–∞—Ç–æ –ø—ä—Ä–≤–∞—Ç–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è
        }
        
        if (nameInput) {
          nameInput.value = '–ö–æ–Ω—Ñ–ª–∏–∫—Ç –¢–µ—Å—Ç';
        }
        
        if (serviceSelect && serviceSelect.options.length > 1) {
          serviceSelect.value = serviceSelect.options[1].value;
        }
      });
      
      await (page.waitForTimeout ? page.waitForTimeout(1000) : new Promise(resolve => setTimeout(resolve, 1000)));
      
      // –û–ø–∏—Ç–∞–π –¥–∞ –∑–∞–ø–∞–∑–∏—à
      await page.evaluate(() => {
        const buttons = Array.from(document.querySelectorAll('button'));
        const saveBtn = buttons.find(btn => btn.textContent.includes('–ó–∞–ø–∞–∑–∏') && btn.type === 'submit');
        if (saveBtn) {
          saveBtn.click();
        }
      });
      
      await (page.waitForTimeout ? page.waitForTimeout(3000) : new Promise(resolve => setTimeout(resolve, 3000)));
      
      // –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ –∏–º–∞ —Å—ä–æ–±—â–µ–Ω–∏–µ –∑–∞ –≥—Ä–µ—à–∫–∞
      const errorMessage = await page.evaluate(() => {
        const errorElement = document.querySelector('.text-red-500, .text-red-600, .bg-red-100');
        return errorElement ? errorElement.textContent : null;
      });
      
      if (errorMessage) {
        console.log('‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ä—Ç –µ –æ—Ç–∫—Ä–∏—Ç:', errorMessage);
      } else {
        console.log('‚ùå –ö–æ–Ω—Ñ–ª–∏–∫—Ç—ä—Ç –Ω–µ –µ –æ—Ç–∫—Ä–∏—Ç');
      }
    }
    
    console.log('\nüéâ –ü—ä–ª–µ–Ω —Ç–µ—Å—Ç—ä—Ç –∑–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏ –ø—Ä–µ–∑ –∫–∞–ª–µ–Ω–¥–∞—Ä–∞ –∑–∞–≤—ä—Ä—à–∏!');
      
    } catch (error) {
      console.error('‚ùå –ì—Ä–µ—à–∫–∞ –≤ —Ç–µ—Å—Ç–∞:', error.message);
    } finally {
      await browser.close();
    }
  }
  
  testCalendarBookings();