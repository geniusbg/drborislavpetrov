const http = require('http');

// –í—Å–∏—á–∫–∏ bugs –∫–æ–∏—Ç–æ –ø–æ–ø—Ä–∞–≤–∏—Ö–º–µ –∏ –Ω–µ —Å–∞ –≤ tracker-–∞
const fixedBugs = [
  {
    title: "–ü—Ä–æ–º—è–Ω–∞ –Ω–∞ —Å—Ç–∞—Ç—É—Å –ø–æ–∫–∞–∑–≤–∞ –≥—Ä–µ—à–∫–∞ —á–∞—Å—ä—Ç –≤–µ—á–µ –µ –∑–∞–µ—Ç",
    description: "–ö–æ–≥–∞—Ç–æ —Å–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è –∏ —Å–µ –ø—Ä–æ–º–µ–Ω—è —Å–∞–º–æ —Å—Ç–∞—Ç—É—Å–∞, —Å–∏—Å—Ç–µ–º–∞—Ç–∞ –ø–æ–∫–∞–∑–≤–∞—à–µ –≥—Ä–µ—à–∫–∞ –∑–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç –Ω–∞ –≤—Ä–µ–º–µ—Ç–æ. –ü—Ä–æ–±–ª–µ–º—ä—Ç –±–µ—à–µ —á–µ —Å–µ –∏–∑–≤–∏–∫–≤–∞—à–µ –æ—Å–Ω–æ–≤–Ω–∏—è API endpoint —Å –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∏ –≤–º–µ—Å—Ç–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–∞–Ω endpoint –∑–∞ —Å—Ç–∞—Ç—É—Å.",
    severity: "high",
    category: "functionality",
    priority: "high",
    reporter: "admin",
    steps_to_reproduce: [
      "–û—Ç–≤–æ—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∞ –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è",
      "–ü—Ä–æ–º–µ–Ω–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ—Ç pending –Ω–∞ confirmed",
      "–ó–∞–ø–∞–∑–∏ –ø—Ä–æ–º—è–Ω–∞—Ç–∞"
    ],
    expected_behavior: "–°—Ç–∞—Ç—É—Å—ä—Ç —Å–µ –ø—Ä–æ–º–µ–Ω—è —É—Å–ø–µ—à–Ω–æ –±–µ–∑ –≥—Ä–µ—à–∫–∏",
    actual_behavior: "–°–∏—Å—Ç–µ–º–∞—Ç–∞ –ø–æ–∫–∞–∑–≤–∞—à–µ –≥—Ä–µ—à–∫–∞ –∑–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç",
    browser: "Chrome",
    device: "Desktop",
    tags: ["booking", "status", "conflict", "resolved"]
  },
  {
    title: "–†–∞–±–æ—Ç–Ω–æ –≤—Ä–µ–º–µ –ø–æ–∫–∞–∑–≤–∞ –≤—á–µ—Ä–∞—à–Ω–∞—Ç–∞ –¥–∞—Ç–∞",
    description: "–ö–æ–≥–∞—Ç–æ —Å–µ –æ—Ç–≤–∞—Ä—è—à–µ —Ñ–æ—Ä–º–∞—Ç–∞ –∑–∞ —Ä–∞–±–æ—Ç–Ω–æ –≤—Ä–µ–º–µ, –ø–æ–∫–∞–∑–≤–∞—à–µ —Å–µ –≤—á–µ—Ä–∞—à–Ω–∞—Ç–∞ –¥–∞—Ç–∞ –≤–º–µ—Å—Ç–æ –¥–Ω–µ—à–Ω–∞—Ç–∞. –ü—Ä–æ–±–ª–µ–º—ä—Ç –±–µ—à–µ –≤ isSunday —Ñ—É–Ω–∫—Ü–∏—è—Ç–∞ –∫–æ—è—Ç–æ –∏–∑–ø–æ–ª–∑–≤–∞—à–µ –ª–æ–∫–∞–ª–Ω–æ –≤—Ä–µ–º–µ –≤–º–µ—Å—Ç–æ –±—ä–ª–≥–∞—Ä—Å–∫–æ.",
    severity: "medium",
    category: "functionality",
    priority: "medium",
    reporter: "admin",
    steps_to_reproduce: [
      "–û—Ç–≤–æ—Ä–∏ —Ñ–æ—Ä–º–∞—Ç–∞ –∑–∞ —Ä–∞–±–æ—Ç–Ω–æ –≤—Ä–µ–º–µ",
      "–ü—Ä–æ–≤–µ—Ä–∏ –¥–∞—Ç–∞—Ç–∞ –∫–æ—è—Ç–æ —Å–µ –ø–æ–∫–∞–∑–≤–∞"
    ],
    expected_behavior: "–ü–æ–∫–∞–∑–≤–∞ —Å–µ –¥–Ω–µ—à–Ω–∞—Ç–∞ –¥–∞—Ç–∞",
    actual_behavior: "–ü–æ–∫–∞–∑–≤–∞—à–µ —Å–µ –≤—á–µ—Ä–∞—à–Ω–∞—Ç–∞ –¥–∞—Ç–∞",
    browser: "Chrome",
    device: "Desktop",
    tags: ["working-hours", "date", "timezone", "resolved"]
  },
  {
    title: "Runtime Error Cannot read properties of undefined reading toLowerCase",
    description: "–í page.tsx –∏–º–∞—à–µ –≥—Ä–µ—à–∫–∞ –ø—Ä–∏ —Ñ–∏–ª—Ç—Ä–∏—Ä–∞–Ω–µ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏ –∫–æ–≥–∞—Ç–æ –Ω—è–∫–æ–∏ –ø–æ–ª–µ—Ç–∞ —Å–∞ undefined. –ü—Ä–æ–±–ª–µ–º—ä—Ç –±–µ—à–µ –ª–∏–ø—Å–∞ –Ω–∞ null checks –ø—Ä–µ–¥–∏ –∏–∑–≤–∏–∫–≤–∞–Ω–µ –Ω–∞ toLowerCase().",
    severity: "medium",
    category: "ui",
    priority: "medium",
    reporter: "admin",
    steps_to_reproduce: [
      "–û—Ç–≤–æ—Ä–∏ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∞",
      "–û–ø–∏—Ç–∞–π –¥–∞ —Ñ–∏–ª—Ç—Ä–∏—Ä–∞—à —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏"
    ],
    expected_behavior: "–§–∏–ª—Ç—Ä–∏—Ä–∞–Ω–µ—Ç–æ —Ä–∞–±–æ—Ç–∏ –±–µ–∑ –≥—Ä–µ—à–∫–∏",
    actual_behavior: "–ü–æ–ª—É—á–∞–≤–∞—à–µ —Å–µ runtime error",
    browser: "Chrome",
    device: "Desktop",
    tags: ["ui", "filter", "runtime-error", "resolved"]
  },
  {
    title: "Bug Tracker API POST –∑–∞—è–≤–∫–∏ –¥–∞–≤–∞—Ç 500 –≥—Ä–µ—à–∫–∞",
    description: "POST –∑–∞—è–≤–∫–∏—Ç–µ –∫—ä–º bug tracker API-—Ç–æ –¥–∞–≤–∞—Ö–∞ 500 Internal Server Error. –ü—Ä–æ–±–ª–µ–º—ä—Ç –±–µ—à–µ connection leak –∏ –ª–∏–ø—Å–∞ –Ω–∞ proper error handling.",
    severity: "high",
    category: "database",
    priority: "high",
    reporter: "admin",
    steps_to_reproduce: [
      "–û–ø–∏—Ç–∞–π –¥–∞ –¥–æ–±–∞–≤–∏—à bug –ø—Ä–µ–∑ —Å–∫—Ä–∏–ø—Ç",
      "–û–ø–∏—Ç–∞–π curl POST –∑–∞—è–≤–∫–∞"
    ],
    expected_behavior: "Bug —Å–µ –¥–æ–±–∞–≤—è —É—Å–ø–µ—à–Ω–æ",
    actual_behavior: "–ü–æ–ª—É—á–∞–≤–∞—à–µ —Å–µ 500 –≥—Ä–µ—à–∫–∞",
    browser: "N/A",
    device: "Server",
    tags: ["api", "database", "connection", "resolved"]
  },
  {
    title: "Calendar plus button –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–∞–Ω–µ",
    description: "–ö–Ω–æ–ø–∫–∞—Ç–∞ plus –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–∞ —Å–µ –ø—Ä–∏–ø–æ–∫—Ä–∏–≤–∞—à–µ —Å –Ω–æ–º–µ—Ä–∞ –Ω–∞ –¥–∞—Ç–∞—Ç–∞. –ü—Ä–æ–±–ª–µ–º—ä—Ç –±–µ—à–µ –≤ CSS –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–∞–Ω–µ—Ç–æ.",
    severity: "medium",
    category: "ui",
    priority: "medium",
    reporter: "admin",
    steps_to_reproduce: [
      "–û—Ç–≤–æ—Ä–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–∞",
      "–ü—Ä–æ–≤–µ—Ä–∏ –ø–æ–∑–∏—Ü–∏—è—Ç–∞ –Ω–∞ plus –∫–Ω–æ–ø–∫–∞—Ç–∞"
    ],
    expected_behavior: "–ö–Ω–æ–ø–∫–∞—Ç–∞ –Ω–µ —Å–µ –ø—Ä–∏–ø–æ–∫—Ä–∏–≤–∞ —Å –Ω–æ–º–µ—Ä–∞",
    actual_behavior: "–ö–Ω–æ–ø–∫–∞—Ç–∞ —Å–µ –ø—Ä–∏–ø–æ–∫—Ä–∏–≤–∞—à–µ —Å –Ω–æ–º–µ—Ä–∞",
    browser: "Chrome",
    device: "Desktop",
    tags: ["calendar", "ui", "positioning", "resolved"]
  },
  {
    title: "Escape key –Ω–µ —Ä–∞–±–æ—Ç–∏ –∑–∞ –≤—Å–∏—á–∫–∏ –º–æ–¥–∞–ª–∏",
    description: "Escape –∫–ª–∞–≤–∏—à—ä—Ç –Ω–µ —Ä–∞–±–æ—Ç–µ—à–µ –∑–∞ –≤—Å–∏—á–∫–∏ pop-up –ø—Ä–æ–∑–æ—Ä—Ü–∏/–º–æ–¥–∞–ª–∏. –ü—Ä–æ–±–ª–µ–º—ä—Ç –±–µ—à–µ –≤ event handling-–∞.",
    severity: "medium",
    category: "ui",
    priority: "medium",
    reporter: "admin",
    steps_to_reproduce: [
      "–û—Ç–≤–æ—Ä–∏ –Ω—è–∫–æ–π –º–æ–¥–∞–ª",
      "–ù–∞—Ç–∏—Å–Ω–∏ Escape"
    ],
    expected_behavior: "–ú–æ–¥–∞–ª—ä—Ç —Å–µ –∑–∞—Ç–≤–∞—Ä—è",
    actual_behavior: "–ú–æ–¥–∞–ª—ä—Ç –Ω–µ —Å–µ –∑–∞—Ç–≤–∞—Ä—è—à–µ",
    browser: "Chrome",
    device: "Desktop",
    tags: ["keyboard", "modal", "escape", "resolved"]
  },
  {
    title: "Calendar –¥–∞—Ç–∞ –∫–ª–∏–∫–≤–∞–Ω–µ –ø–æ–∫–∞–∑–≤–∞ –≥—Ä–µ—à–Ω–∞ –¥–∞—Ç–∞",
    description: "–ö–æ–≥–∞—Ç–æ —Å–µ –∫–ª–∏–∫–≤–∞ –Ω–∞ –¥–∞—Ç–∞ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–∞, —Å–µ highlight-–≤–∞—à–µ –≥—Ä–µ—à–Ω–∞—Ç–∞ –¥–∞—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä –∫–ª–∏–∫ –Ω–∞ 14-—Ç–∏ highlight-–≤–∞ 13-—Ç–∏).",
    severity: "medium",
    category: "ui",
    priority: "medium",
    reporter: "admin",
    steps_to_reproduce: [
      "–û—Ç–≤–æ—Ä–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–∞",
      "–ö–ª–∏–∫–Ω–∏ –Ω–∞ –¥–∞—Ç–∞"
    ],
    expected_behavior: "Highlight-–≤–∞ —Å–µ –ø—Ä–∞–≤–∏–ª–Ω–∞—Ç–∞ –¥–∞—Ç–∞",
    actual_behavior: "Highlight-–≤–∞—à–µ —Å–µ –≥—Ä–µ—à–Ω–∞—Ç–∞ –¥–∞—Ç–∞",
    browser: "Chrome",
    device: "Desktop",
    tags: ["calendar", "click", "highlight", "resolved"]
  },
  {
    title: "Timeline –Ω–µ –ø–æ–∫–∞–∑–≤–∞ –ø—Ä–∞–≤–∏–ª–Ω–∞ –ø—Ä–æ–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ—Å—Ç –Ω–∞ —É—Å–ª—É–≥–∏—Ç–µ",
    description: "Timeline-—ä—Ç –Ω–µ –ø–æ–∫–∞–∑–≤–∞—à–µ –ø—Ä–∞–≤–∏–ª–Ω–æ –ø—Ä–æ–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ—Å—Ç—Ç–∞ –Ω–∞ —É—Å–ª—É–≥–∏—Ç–µ. –ü—Ä–æ–±–ª–µ–º—ä—Ç –±–µ—à–µ –≤ –∏–∑—á–∏—Å–ª—è–≤–∞–Ω–µ—Ç–æ –Ω–∞ –≤—Ä–µ–º–µ—Ç–æ.",
    severity: "medium",
    category: "functionality",
    priority: "medium",
    reporter: "admin",
    steps_to_reproduce: [
      "–û—Ç–≤–æ—Ä–∏ Daily Schedule",
      "–ü—Ä–æ–≤–µ—Ä–∏ timeline-–∞"
    ],
    expected_behavior: "–ü–æ–∫–∞–∑–≤–∞ —Å–µ –ø—Ä–∞–≤–∏–ª–Ω–∞—Ç–∞ –ø—Ä–æ–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ—Å—Ç",
    actual_behavior: "–ü–æ–∫–∞–∑–≤–∞—à–µ —Å–µ –≥—Ä–µ—à–Ω–∞ –ø—Ä–æ–¥—ä–ª–∂–∏—Ç–µ–ª–Ω–æ—Å—Ç",
    browser: "Chrome",
    device: "Desktop",
    tags: ["timeline", "duration", "services", "resolved"]
  },
  {
    title: "Calendar marker –ø–æ–∫–∞–∑–≤–∞ –≥—Ä–µ—à–Ω–∞ —Ç–µ–∫—É—â–∞ –¥–∞—Ç–∞",
    description: "Calendar marker-—ä—Ç –ø–æ–∫–∞–∑–≤–∞—à–µ –≥—Ä–µ—à–Ω–∞ —Ç–µ–∫—É—â–∞ –¥–∞—Ç–∞. –ü—Ä–æ–±–ª–µ–º—ä—Ç –±–µ—à–µ –≤ timezone handling-–∞.",
    severity: "medium",
    category: "ui",
    priority: "medium",
    reporter: "admin",
    steps_to_reproduce: [
      "–û—Ç–≤–æ—Ä–∏ –∫–∞–ª–µ–Ω–¥–∞—Ä–∞",
      "–ü—Ä–æ–≤–µ—Ä–∏ —Ç–µ–∫—É—â–∞—Ç–∞ –¥–∞—Ç–∞ marker"
    ],
    expected_behavior: "–ü–æ–∫–∞–∑–≤–∞ —Å–µ –ø—Ä–∞–≤–∏–ª–Ω–∞—Ç–∞ —Ç–µ–∫—É—â–∞ –¥–∞—Ç–∞",
    actual_behavior: "–ü–æ–∫–∞–∑–≤–∞—à–µ —Å–µ –≥—Ä–µ—à–Ω–∞ —Ç–µ–∫—É—â–∞ –¥–∞—Ç–∞",
    browser: "Chrome",
    device: "Desktop",
    tags: ["calendar", "current-date", "timezone", "resolved"]
  },
  {
    title: "–í—Å–∏—á–∫–∏ —á–∞—Å–æ–≤–µ –Ω–µ —Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–∞–Ω–∏ —Å –±—ä–ª–≥–∞—Ä—Å–∫–æ –≤—Ä–µ–º–µ",
    description: "–ß–∞—Å–æ–≤–µ—Ç–µ –∏ –≤—Ä–µ–º–µ—Ç–æ –≤ —Ä–∞–∑–ª–∏—á–Ω–∏—Ç–µ —á–∞—Å—Ç–∏ –Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ –Ω–µ –±—è—Ö–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–∞–Ω–∏ —Å –±—ä–ª–≥–∞—Ä—Å–∫–æ—Ç–æ –≤—Ä–µ–º–µ.",
    severity: "high",
    category: "functionality",
    priority: "high",
    reporter: "admin",
    steps_to_reproduce: [
      "–ü—Ä–æ–≤–µ—Ä–∏ —á–∞—Å–æ–≤–µ—Ç–µ –≤ —Ä–∞–∑–ª–∏—á–Ω–∏—Ç–µ —Å–µ–∫—Ü–∏–∏",
      "–°—Ä–∞–≤–Ω–∏ —Å –±—ä–ª–≥–∞—Ä—Å–∫–æ—Ç–æ –≤—Ä–µ–º–µ"
    ],
    expected_behavior: "–í—Å–∏—á–∫–∏ —á–∞—Å–æ–≤–µ –ø–æ–∫–∞–∑–≤–∞—Ç –±—ä–ª–≥–∞—Ä—Å–∫–æ –≤—Ä–µ–º–µ",
    actual_behavior: "–ß–∞—Å–æ–≤–µ—Ç–µ –ø–æ–∫–∞–∑–≤–∞—Ö–∞ –ª–æ–∫–∞–ª–Ω–æ –≤—Ä–µ–º–µ",
    browser: "Chrome",
    device: "Desktop",
    tags: ["time", "timezone", "bulgaria", "resolved"]
  }
];

async function getExistingBugs() {
  return new Promise((resolve, reject) => {
    const options = {
      hostname: 'localhost',
      port: 3000,
      path: '/api/admin/bugs',
      method: 'GET',
      headers: {
        'x-admin-token': 'admin-token'
      }
    };
    
    const req = http.request(options, (res) => {
      let data = '';
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        if (res.statusCode === 200) {
          try {
            const response = JSON.parse(data);
            const bugs = Array.isArray(response) ? response : response.bugs || [];
            resolve(bugs);
          } catch (parseError) {
            reject(new Error(`Failed to parse response: ${parseError.message}`));
          }
        } else {
          reject(new Error(`Failed to get bugs: ${data}`));
        }
      });
    });
    
    req.on('error', (e) => {
      reject(e);
    });
    
    req.end();
  });
}

async function addBug(bug) {
  return new Promise((resolve, reject) => {
    // Properly escape special characters in JSON
    const postData = JSON.stringify(bug, null, 0);
    
    console.log(`üîç Sending data: ${postData.substring(0, 100)}...`);
    
    const options = {
      hostname: 'localhost',
      port: 3000,
      path: '/api/admin/bugs',
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'x-admin-token': 'admin-token',
        'Content-Length': Buffer.byteLength(postData, 'utf8')
      }
    };
    
    const req = http.request(options, (res) => {
      let data = '';
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        console.log(`üîç Response status: ${res.statusCode}`);
        console.log(`üîç Response data: ${data.substring(0, 200)}...`);
        
        if (res.statusCode === 200) {
          try {
            const response = JSON.parse(data);
            resolve({ success: true, data: response });
          } catch (parseError) {
            resolve({ success: true, data: data });
          }
        } else {
          resolve({ success: false, error: data });
        }
      });
    });
    
    req.on('error', (e) => {
      reject(e);
    });
    
    req.write(postData, 'utf8');
    req.end();
  });
}

async function addFixedBugsSafe() {
  console.log('üêõ Adding fixed bugs to tracker (with duplicate check)...\n');
  
  try {
    // Get existing bugs
    console.log('üîç Checking existing bugs...');
    const existingBugs = await getExistingBugs();
    console.log(`üìä Found ${existingBugs.length} existing bugs`);
    
    // Create set of existing titles (case-insensitive)
    const existingTitles = new Set(
      existingBugs.map(bug => bug.title.toLowerCase().trim())
    );
    
    // Filter out bugs that already exist
    const newBugs = fixedBugs.filter(bug => 
      !existingTitles.has(bug.title.toLowerCase().trim())
    );
    
    if (newBugs.length === 0) {
      console.log('‚úÖ All bugs already exist in tracker!');
      return;
    }
    
    console.log(`üìù Found ${newBugs.length} new bugs to add:`);
    newBugs.forEach((bug, index) => {
      console.log(`   ${index + 1}. ${bug.title}`);
    });
    
    // Add new bugs
    let successCount = 0;
    let errorCount = 0;
    
    for (const bug of newBugs) {
      try {
        console.log(`üìù Adding: ${bug.title}`);
        
        const result = await addBug(bug);
        
        if (result.success) {
          console.log(`‚úÖ Success: ${bug.title}`);
          successCount++;
        } else {
          console.log(`‚ùå Failed: ${bug.title} - ${result.error}`);
          errorCount++;
        }
        
        // Wait between requests
        await new Promise(resolve => setTimeout(resolve, 500));
        
      } catch (error) {
        console.error(`‚ùå Error adding bug: ${bug.title}`, error);
        errorCount++;
      }
    }
    
    console.log(`\nüìä Summary:`);
    console.log(`üìù New bugs found: ${newBugs.length}`);
    console.log(`‚úÖ Successfully added: ${successCount} bugs`);
    console.log(`‚ùå Failed to add: ${errorCount} bugs`);
    console.log(`üîç Skipped (already exist): ${fixedBugs.length - newBugs.length} bugs`);
    
  } catch (error) {
    console.error('‚ùå Error:', error);
  }
}

addFixedBugsSafe(); 