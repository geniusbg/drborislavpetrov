// üß™ QA Dashboard - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ —Ç–µ—Å—Ç–æ–≤–µ
// –í–∏—Ä—Ç—É–∞–ª–µ–Ω QA –µ–∫–∏–ø - —Ç–∞–±–ª–æ –∑–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ

const fs = require('fs');
const path = require('path');

class QADashboard {
  constructor() {
    this.testFiles = {
      'QA_AUTOMATED_TEST.js': '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–∞–Ω–∏ —Ç–µ—Å—Ç–æ–≤–µ (Puppeteer)',
      'TEST_HOMEPAGE.js': '–¢–µ—Å—Ç –Ω–∞ –Ω–∞—á–∞–ª–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞',
      'TEST_BOOKINGS.js': '–¢–µ—Å—Ç –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏',
      'TEST_CALENDAR.js': '–¢–µ—Å—Ç –Ω–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä',
      'TEST_USERS.js': '–¢–µ—Å—Ç –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏',
      'TEST_SERVICE_EDITING.js': '–¢–µ—Å—Ç –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ —É—Å–ª—É–≥–∏',
      'TEST_API.js': '–¢–µ—Å—Ç –Ω–∞ API endpoints',
      'TEST_FORM_VALIDATION.js': '–¢–µ—Å—Ç –Ω–∞ –≤–∞–ª–∏–¥–∞—Ü–∏—è –Ω–∞ —Ñ–æ—Ä–º–∏',
      'TEST_BUTTONS.js': '–¢–µ—Å—Ç –Ω–∞ –±—É—Ç–æ–Ω–∏ –∏ UI',
      'TEST_NETWORK.js': '–¢–µ—Å—Ç –Ω–∞ –º—Ä–µ–∂–æ–≤–∏ –∑–∞—è–≤–∫–∏',
      'TEST_LOCALSTORAGE.js': '–¢–µ—Å—Ç –Ω–∞ localStorage',
      'TEST_AUTO_REFRESH.js': '–¢–µ—Å—Ç –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ–±–Ω–æ–≤—è–≤–∞–Ω–µ',
      'TEST_HYDRATION_FIX.js': '–¢–µ—Å—Ç –Ω–∞ hydration',
      'TEST_CALENDAR_BOOKINGS.js': '–¢–µ—Å—Ç –Ω–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏',
      'TEST_BOOKING_CREATION.js': '–¢–µ—Å—Ç –Ω–∞ —Å—ä–∑–¥–∞–≤–∞–Ω–µ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏',
      'TEST_BOOKING_EDITING.js': '–¢–µ—Å—Ç –Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏',
      'TEST_USERS_API.js': '–¢–µ—Å—Ç –Ω–∞ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ API',
      'TEST_USERS_MODAL_CLOSE.js': '–¢–µ—Å—Ç –Ω–∞ –º–æ–¥–∞–ª–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏',
      'TEST_API_SERVICES.js': '–¢–µ—Å—Ç –Ω–∞ —É—Å–ª—É–≥–∏ API'
    };
    
    this.qaGuides = {
      'QA_CHECKLIST.md': 'QA Checklist - –†—ä—á–Ω–æ —Ç–µ—Å—Ç–≤–∞–Ω–µ',
      'QA_TEAM_GUIDE.md': 'QA Team Guide - –†—ä–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∑–∞ –µ–∫–∏–ø–∞',
      'QA_TEST_SCRIPT.md': 'QA Test Script - –°–∫—Ä–∏–ø—Ç –∑–∞ —Ç–µ—Å—Ç–≤–∞–Ω–µ',
      'MANUAL_QA_TEST.md': 'Manual QA Test - –†—ä—á–Ω–æ —Ç–µ—Å—Ç–≤–∞–Ω–µ',
      'QA_TESTS_BOOKING_STATUS.md': 'QA Tests Booking Status - –°—Ç–∞—Ç—É—Å —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏'
    };
  }

  showMainMenu() {
    console.log('\nüß™ === QA DASHBOARD ===');
    console.log('1. üìã –ü–æ–∫–∞–∂–∏ –≤—Å–∏—á–∫–∏ QA —Ç–µ—Å—Ç–æ–≤–µ');
    console.log('2. üöÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–∞–Ω —Ç–µ—Å—Ç');
    console.log('3. üîß –°—Ç–∞—Ä—Ç–∏—Ä–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–µ–Ω —Ç–µ—Å—Ç');
    console.log('4. üìä –ü–æ–∫–∞–∂–∏ QA —Ä—ä–∫–æ–≤–æ–¥—Å—Ç–≤–∞');
    console.log('5. üßπ –ò–∑—á–∏—Å—Ç–∏ —Ç–µ—Å—Ç–æ–≤–∏ –¥–∞–Ω–Ω–∏');
    console.log('6. üìà –ì–µ–Ω–µ—Ä–∏—Ä–∞–π QA –æ—Ç—á–µ—Ç');
    console.log('7. üîç –ü—Ä–æ–≤–µ—Ä–∏ —Å—Ç–∞—Ç—É—Å –Ω–∞ —Ç–µ—Å—Ç–æ–≤–µ');
    console.log('8. ‚ùå –ò–∑–ª–µ–∑');
    console.log('========================\n');
  }

  async listAllTests() {
    console.log('\nüìã === –í–°–ò–ß–ö–ò QA –¢–ï–°–¢–û–í–ï ===\n');
    
    console.log('ü§ñ –ê–í–¢–û–ú–ê–¢–ò–ó–ò–†–ê–ù–ò –¢–ï–°–¢–û–í–ï:');
    console.log('============================');
    for (const [file, description] of Object.entries(this.testFiles)) {
      const exists = fs.existsSync(file) ? '‚úÖ' : '‚ùå';
      console.log(`${exists} ${file} - ${description}`);
    }
    
    console.log('\nüìö QA –†–™–ö–û–í–û–î–°–¢–í–ê:');
    console.log('==================');
    for (const [file, description] of Object.entries(this.qaGuides)) {
      const exists = fs.existsSync(file) ? '‚úÖ' : '‚ùå';
      console.log(`${exists} ${file} - ${description}`);
    }
    
    console.log('\nüìä –î–†–£–ì–ò –¢–ï–°–¢–û–í–ò –§–ê–ô–õ–û–í–ï:');
    console.log('==========================');
    const otherTestFiles = [
      'test-bug-api.js',
      'test-bug-validation.js',
      'test-bug-post.js',
      'check-duplicates.js',
      'remove-duplicates.js',
      'add-fixed-bugs-safe.js'
    ];
    
    for (const file of otherTestFiles) {
      const exists = fs.existsSync(file) ? '‚úÖ' : '‚ùå';
      console.log(`${exists} ${file}`);
    }
  }

  async runAutomatedTest() {
    console.log('\nüöÄ === –°–¢–ê–†–¢–ò–†–ê–ù–ï –ù–ê –ê–í–¢–û–ú–ê–¢–ò–ó–ò–†–ê–ù –¢–ï–°–¢ ===\n');
    
    if (!fs.existsSync('QA_AUTOMATED_TEST.js')) {
      console.log('‚ùå QA_AUTOMATED_TEST.js –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω!');
      return;
    }
    
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º –¥–∞–ª–∏ server-—ä—Ç —Ä–∞–±–æ—Ç–∏...');
    
    try {
      const { exec } = require('child_process');
      
      // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ server-—ä—Ç —Ä–∞–±–æ—Ç–∏
      const testServer = new Promise((resolve) => {
        exec('curl -s http://localhost:3000/api/admin/bugs -H "x-admin-token: admin-token"', (error, stdout, stderr) => {
          if (error) {
            console.log('‚ùå Server-—ä—Ç –Ω–µ —Ä–∞–±–æ—Ç–∏! –°—Ç–∞—Ä—Ç–∏—Ä–∞–π—Ç–µ –≥–æ —Å: npm run dev');
            resolve(false);
          } else {
            console.log('‚úÖ Server-—ä—Ç —Ä–∞–±–æ—Ç–∏!');
            resolve(true);
          }
        });
      });
      
      const serverRunning = await testServer;
      if (!serverRunning) return;
      
      console.log('üöÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–º –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–∞–Ω–∏—è QA —Ç–µ—Å—Ç...');
      console.log('üìù –¢–æ–≤–∞ —â–µ –æ—Ç–≤–æ—Ä–∏ –±—Ä–∞—É–∑—ä—Ä –∏ —â–µ –∏–∑–ø—ä–ª–Ω–∏ –≤—Å–∏—á–∫–∏ —Ç–µ—Å—Ç–æ–≤–µ...\n');
      
      exec('node QA_AUTOMATED_TEST.js', (error, stdout, stderr) => {
        if (error) {
          console.log('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —Ç–µ—Å—Ç–∞:', error.message);
        } else {
          console.log('‚úÖ –¢–µ—Å—Ç—ä—Ç –∑–∞–≤—ä—Ä—à–∏ —É—Å–ø–µ—à–Ω–æ!');
          console.log(stdout);
        }
      });
      
    } catch (error) {
      console.log('‚ùå –ì—Ä–µ—à–∫–∞:', error.message);
    }
  }

  async runSpecificTest() {
    console.log('\nüîß === –°–¢–ê–†–¢–ò–†–ê–ù–ï –ù–ê –ö–û–ù–ö–†–ï–¢–ï–ù –¢–ï–°–¢ ===\n');
    
    console.log('–î–æ—Å—Ç—ä–ø–Ω–∏ —Ç–µ—Å—Ç–æ–≤–µ:');
    let index = 1;
    for (const [file, description] of Object.entries(this.testFiles)) {
      const exists = fs.existsSync(file) ? '‚úÖ' : '‚ùå';
      console.log(`${index}. ${exists} ${file} - ${description}`);
      index++;
    }
    
    console.log('\n–í—ä–≤–µ–¥–µ—Ç–µ –Ω–æ–º–µ—Ä–∞ –Ω–∞ —Ç–µ—Å—Ç–∞ (–∏–ª–∏ 0 –∑–∞ –∏–∑—Ö–æ–¥):');
    
    // –¢—É–∫ –±–∏—Ö–º–µ –º–æ–≥–ª–∏ –¥–∞ –¥–æ–±–∞–≤–∏–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–µ–Ω –∏–∑–±–æ—Ä
    // –ó–∞ —Å–µ–≥–∞ —â–µ –ø–æ–∫–∞–∂–µ–º –∫–∞–∫ –¥–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞—Ç–µ —Ä—ä—á–Ω–æ
    console.log('\nüí° –ó–∞ –¥–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞—Ç–µ —Ç–µ—Å—Ç —Ä—ä—á–Ω–æ, –∏–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ:');
    console.log('   node [–∏–º–µ_–Ω–∞_—Ñ–∞–π–ª–∞]');
    console.log('   –ü—Ä–∏–º–µ—Ä: node TEST_HOMEPAGE.js');
  }

  async showQAGuides() {
    console.log('\nüìö === QA –†–™–ö–û–í–û–î–°–¢–í–ê ===\n');
    
    for (const [file, description] of Object.entries(this.qaGuides)) {
      const exists = fs.existsSync(file) ? '‚úÖ' : '‚ùå';
      console.log(`${exists} ${file} - ${description}`);
      
      if (exists === '‚úÖ') {
        try {
          const content = fs.readFileSync(file, 'utf8');
          const lines = content.split('\n').slice(0, 3); // –ü—ä—Ä–≤–∏—Ç–µ 3 —Ä–µ–¥–∞
          console.log(`   üìù ${lines.join(' ')}...`);
        } catch (error) {
          console.log('   ‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —á–µ—Ç–µ–Ω–µ –Ω–∞ —Ñ–∞–π–ª–∞');
        }
      }
      console.log('');
    }
  }

  async cleanupTestData() {
    console.log('\nüßπ === –ò–ó–ß–ò–°–¢–í–ê–ù–ï –ù–ê –¢–ï–°–¢–û–í–ò –î–ê–ù–ù–ò ===\n');
    
    if (fs.existsSync('CLEANUP_TEST_DATA.js')) {
      console.log('üöÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–º –∏–∑—á–∏—Å—Ç–≤–∞–Ω–µ –Ω–∞ —Ç–µ—Å—Ç–æ–≤–∏ –¥–∞–Ω–Ω–∏...');
      
      const { exec } = require('child_process');
      exec('node CLEANUP_TEST_DATA.js', (error, stdout, stderr) => {
        if (error) {
          console.log('‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∏–∑—á–∏—Å—Ç–≤–∞–Ω–µ:', error.message);
        } else {
          console.log('‚úÖ –¢–µ—Å—Ç–æ–≤–∏—Ç–µ –¥–∞–Ω–Ω–∏ —Å–∞ –∏–∑—á–∏—Å—Ç–µ–Ω–∏!');
          console.log(stdout);
        }
      });
    } else {
      console.log('‚ùå CLEANUP_TEST_DATA.js –Ω–µ –µ –Ω–∞–º–µ—Ä–µ–Ω!');
    }
  }

  async generateQAReport() {
    console.log('\nüìà === –ì–ï–ù–ï–†–ò–†–ê–ù–ï –ù–ê QA –û–¢–ß–ï–¢ ===\n');
    
    const report = {
      timestamp: new Date().toISOString(),
      testFiles: {},
      qaGuides: {},
      summary: {
        totalTests: 0,
        availableTests: 0,
        totalGuides: 0,
        availableGuides: 0
      }
    };
    
    // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ —Ç–µ—Å—Ç–æ–≤–∏—Ç–µ —Ñ–∞–π–ª–æ–≤–µ
    for (const [file, description] of Object.entries(this.testFiles)) {
      const exists = fs.existsSync(file);
      report.testFiles[file] = {
        description,
        exists,
        size: exists ? fs.statSync(file).size : 0
      };
      report.summary.totalTests++;
      if (exists) report.summary.availableTests++;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ QA —Ä—ä–∫–æ–≤–æ–¥—Å—Ç–≤–∞—Ç–∞
    for (const [file, description] of Object.entries(this.qaGuides)) {
      const exists = fs.existsSync(file);
      report.qaGuides[file] = {
        description,
        exists,
        size: exists ? fs.statSync(file).size : 0
      };
      report.summary.totalGuides++;
      if (exists) report.summary.availableGuides++;
    }
    
    // –ó–∞–ø–∏—Å–≤–∞–º–µ –æ—Ç—á–µ—Ç–∞
    fs.writeFileSync('qa_report.json', JSON.stringify(report, null, 2));
    
    console.log('‚úÖ QA –æ—Ç—á–µ—Ç—ä—Ç –µ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω: qa_report.json');
    console.log(`üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`);
    console.log(`   - –¢–µ—Å—Ç–æ–≤–µ: ${report.summary.availableTests}/${report.summary.totalTests}`);
    console.log(`   - –†—ä–∫–æ–≤–æ–¥—Å—Ç–≤–∞: ${report.summary.availableGuides}/${report.summary.totalGuides}`);
  }

  async checkTestStatus() {
    console.log('\nüîç === –ü–†–û–í–ï–†–ö–ê –ù–ê –°–¢–ê–¢–£–° –ù–ê –¢–ï–°–¢–û–í–ï ===\n');
    
    // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ –¥–∞–ª–∏ server-—ä—Ç —Ä–∞–±–æ—Ç–∏
    console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º server —Å—Ç–∞—Ç—É—Å...');
    
    const { exec } = require('child_process');
    exec('curl -s http://localhost:3000/api/admin/bugs -H "x-admin-token: admin-token"', (error, stdout, stderr) => {
      if (error) {
        console.log('‚ùå Server-—ä—Ç –Ω–µ —Ä–∞–±–æ—Ç–∏!');
        console.log('üí° –°—Ç–∞—Ä—Ç–∏—Ä–∞–π—Ç–µ –≥–æ —Å: npm run dev');
      } else {
        console.log('‚úÖ Server-—ä—Ç —Ä–∞–±–æ—Ç–∏!');
      }
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–≤–∞–º–µ —Ç–µ—Å—Ç–æ–≤–∏—Ç–µ —Ñ–∞–π–ª–æ–≤–µ
    console.log('\nüìã –°—Ç–∞—Ç—É—Å –Ω–∞ —Ç–µ—Å—Ç–æ–≤–∏ —Ñ–∞–π–ª–æ–≤–µ:');
    for (const [file, description] of Object.entries(this.testFiles)) {
      const exists = fs.existsSync(file) ? '‚úÖ' : '‚ùå';
      console.log(`${exists} ${file}`);
    }
  }

  async start() {
    console.log('üß™ –î–æ–±—Ä–µ –¥–æ—à–ª–∏ –≤ QA Dashboard!');
    console.log('üí° –ò–∑–±–µ—Ä–µ—Ç–µ –æ–ø—Ü–∏—è –æ—Ç –º–µ–Ω—é—Ç–æ –ø–æ-–¥–æ–ª—É...\n');
    
    this.showMainMenu();
    
    // –ó–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è, —â–µ –ø–æ–∫–∞–∂–µ–º –≤—Å–∏—á–∫–∏ —Ç–µ—Å—Ç–æ–≤–µ
    console.log('üìã –ü–æ–∫–∞–∑–≤–∞–º –≤—Å–∏—á–∫–∏ QA —Ç–µ—Å—Ç–æ–≤–µ...\n');
    await this.listAllTests();
    
    console.log('\nüí° –ó–∞ –¥–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–∞–Ω —Ç–µ—Å—Ç, –∏–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ:');
    console.log('   node QA_AUTOMATED_TEST.js');
    console.log('\nüí° –ó–∞ –¥–∞ —Å—Ç–∞—Ä—Ç–∏—Ä–∞—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–µ–Ω —Ç–µ—Å—Ç, –∏–∑–ø–æ–ª–∑–≤–∞–π—Ç–µ:');
    console.log('   node [–∏–º–µ_–Ω–∞_—Ç–µ—Å—Ç_—Ñ–∞–π–ª–∞]');
    console.log('\nüí° –ó–∞ –¥–∞ –ø—Ä–æ–≤–µ—Ä–∏—Ç–µ QA —Ä—ä–∫–æ–≤–æ–¥—Å—Ç–≤–∞—Ç–∞, –æ—Ç–≤–æ—Ä–µ—Ç–µ:');
    console.log('   QA_CHECKLIST.md');
  }
}

// –°—Ç–∞—Ä—Ç–∏—Ä–∞–º–µ dashboard-–∞
const dashboard = new QADashboard();
dashboard.start(); 