const puppeteer = require('puppeteer')

async function testBookingEditing() {
  console.log('üß™ –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ QA —Ç–µ—Å—Ç –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏...')
  
  const browser = await puppeteer.launch({
    headless: false,
    defaultViewport: null,
    args: ['--start-maximized']
  })
  
  const page = await browser.newPage()
  
  try {
    // 1. –û—Ç–∏–¥–∏ –Ω–∞ admin —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞
    console.log('üì± –û—Ç–∏–≤–∞–º –Ω–∞ admin —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞...')
    await page.goto('http://localhost:3000/admin', { waitUntil: 'networkidle0' })
    
    // 2. –ò–∑—á–∞–∫–∞–π –¥–∞ —Å–µ –∑–∞—Ä–µ–¥–∏ login —Ñ–æ—Ä–º–∞—Ç–∞
    await page.waitForSelector('input[name="username"]', { timeout: 10000 })
    console.log('üìù Login —Ñ–æ—Ä–º–∞—Ç–∞ —Å–µ –∑–∞—Ä–µ–¥–∏')
    
    // 3. –õ–æ–≥–Ω–∏ —Å–µ
    console.log('üîê –õ–æ–≥–≤–∞–º —Å–µ...')
    await page.type('input[name="username"]', 'admin')
    await page.type('input[name="password"]', 'admin123')
    await page.click('button[type="submit"]')
    
    // 4. –ò–∑—á–∞–∫–∞–π –¥–∞ —Å–µ –∑–∞—Ä–µ–¥–∏ admin —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ç–∞
    await page.waitForNavigation({ waitUntil: 'networkidle0' })
    console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –ª–æ–≥–≤–∞–Ω–µ')
    
    // 5. –ò–∑—á–∞–∫–∞–π –¥–∞ —Å–µ –∑–∞—Ä–µ–¥—è—Ç —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏—Ç–µ
    await new Promise(resolve => setTimeout(resolve, 3000))
    
    // 6. –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ –∏–º–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏
    const bookingCards = await page.$$('.bg-gray-50')
    console.log(`üìä –ù–∞–º–µ—Ä–µ–Ω–∏ ${bookingCards.length} —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏`)
    
    if (bookingCards.length === 0) {
      console.log('‚ö†Ô∏è –ù—è–º–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏ –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ. –°—ä–∑–¥–∞–≤–∞–º –Ω–æ–≤–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è...')
      
      // –°—ä–∑–¥–∞–π –Ω–æ–≤–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è
      await page.click('button:has-text("–î–æ–±–∞–≤–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è")')
      await page.waitForSelector('form', { timeout: 5000 })
      
      // –ü–æ–ø—ä–ª–Ω–∏ —Ñ–æ—Ä–º–∞—Ç–∞
      await page.type('input[name="name"]', 'Test Booking for Edit')
      await page.type('input[name="phone"]', `+359888${Date.now()}`)
      await page.type('input[name="email"]', 'test@edit.com')
      
      // –ò–∑–±–µ—Ä–∏ —É—Å–ª—É–≥–∞
      await page.select('select[name="service"]', '1')
      
      // –ó–∞–¥–∞–π –¥–∞—Ç–∞ (—É—Ç—Ä–µ)
      const tomorrow = new Date()
      tomorrow.setDate(tomorrow.getDate() + 1)
      const tomorrowStr = tomorrow.toISOString().split('T')[0]
      await page.type('input[name="date"]', tomorrowStr)
      
      // –ó–∞–¥–∞–π —á–∞—Å
      await page.type('input[name="time"]', '14:00')
      
      // –ó–∞–ø–∞–∑–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞
      await page.click('button[type="submit"]')
      
      // –ò–∑—á–∞–∫–∞–π –¥–∞ —Å–µ –∑–∞—Ä–µ–¥–∏ –æ—Ç–Ω–æ–≤–æ
      await new Promise(resolve => setTimeout(resolve, 2000))
    }
    
    // 7. –ù–∞–º–µ—Ä–∏ –ø—ä—Ä–≤–∞—Ç–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è –∏ –∫–ª–∏–∫–Ω–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–π —Å–∞–º–æ –≤ –Ω–µ—è
    // bookingCards –≤–µ—á–µ –µ –¥–µ—Ñ–∏–Ω–∏—Ä–∞–Ω–∞ –ø–æ-–≥–æ—Ä–µ, –∏–∑–ø–æ–ª–∑–≤–∞–π —è —Ç—É–∫
    if (bookingCards.length === 0) {
      console.log('‚ùå –ù—è–º–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏ –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ')
      return
    }
    const firstBooking = bookingCards[0]
    const editButton = await firstBooking.$('button[title="–†–µ–¥–∞–∫—Ç–∏—Ä–∞–π"]')
    if (editButton) {
      console.log('‚úèÔ∏è –ö–ª–∏–∫–≤–∞–º –Ω–∞ –±—É—Ç–æ–Ω–∞ –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –≤ –ø—ä—Ä–≤–∞—Ç–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è...')
      await page.evaluate(el => el.click(), editButton)
    } else {
      console.log('‚ùå –ù–µ –µ –Ω–∞–º–µ—Ä–µ–Ω –±—É—Ç–æ–Ω –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ –≤ –ø—ä—Ä–≤–∞—Ç–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è')
      return
    }
    
    // 8. –ò–∑—á–∞–∫–∞–π –¥–∞ —Å–µ –æ—Ç–≤–æ—Ä–∏ –º–æ–¥–∞–ª–∞ –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ
    await page.waitForSelector('form', { timeout: 5000 })
    console.log('‚úÖ –ú–æ–¥–∞–ª—ä—Ç –∑–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ —Å–µ –æ—Ç–≤–æ—Ä–∏')
    
    // 9. –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ –ø–æ–ª–µ—Ç–∞—Ç–∞ —Å–∞ –ø–æ–ø—ä–ª–Ω–µ–Ω–∏
    const nameValue = await page.$eval('input[name="name"]', el => el.value)
    console.log(`üìù –ò–º–µ –≤ —Ñ–æ—Ä–º–∞—Ç–∞: ${nameValue}`)
    
    // 10. –ü—Ä–æ–º–µ–Ω–∏ –∏–º–µ—Ç–æ
    await page.evaluate(() => {
      const nameInput = document.querySelector('input[name="name"]')
      if (nameInput) {
        nameInput.value = 'Updated Test Booking'
        nameInput.dispatchEvent(new Event('input', { bubbles: true }))
        nameInput.dispatchEvent(new Event('change', { bubbles: true }))
      }
    })
    console.log('‚úèÔ∏è –ü—Ä–æ–º–µ–Ω–µ–Ω–æ –∏–º–µ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞')
    
    // 11. –ü—Ä–æ–º–µ–Ω–∏ —á–∞—Å–∞
    await page.evaluate(() => {
      const timeInput = document.querySelector('input[name="time"]')
      if (timeInput) {
        timeInput.value = '15:00'
        timeInput.dispatchEvent(new Event('input', { bubbles: true }))
        timeInput.dispatchEvent(new Event('change', { bubbles: true }))
      }
    })
    console.log('üïê –ü—Ä–æ–º–µ–Ω–µ–Ω —á–∞—Å –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞')
    
    // 11.5. –ü—Ä–æ–º–µ–Ω–∏ —Å—Ç–∞—Ç—É—Å–∞
    await page.evaluate(() => {
      const statusSelect = document.querySelector('select[name="status"]')
      if (statusSelect) {
        statusSelect.value = 'confirmed'
        statusSelect.dispatchEvent(new Event('change', { bubbles: true }))
      }
    })
    console.log('‚úÖ –ü—Ä–æ–º–µ–Ω–µ–Ω —Å—Ç–∞—Ç—É—Å –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏—è—Ç–∞')
    
    // 12. –ó–∞–ø–∞–∑–∏ –ø—Ä–æ–º–µ–Ω–∏—Ç–µ
    console.log('üíæ –ó–∞–ø–∞–∑–≤–∞–Ω–µ –Ω–∞ –ø—Ä–æ–º–µ–Ω–∏—Ç–µ...')
    
    // Debug: Check what buttons are available in the modal
    const modalButtons = await page.$$('form button')
    console.log(`üîç Debug: Found ${modalButtons.length} buttons in form`)
    
    for (let i = 0; i < modalButtons.length; i++) {
      try {
        const buttonText = await modalButtons[i].$eval('button', el => el.textContent)
        const buttonType = await modalButtons[i].$eval('button', el => el.type)
        console.log(`üîç Debug: Modal button ${i + 1}: text="${buttonText}", type="${buttonType}"`)
      } catch (error) {
        console.log(`üîç Debug: Could not read modal button ${i + 1}`)
      }
    }
    
    // Try different selectors for submit button
    const submitButton = await page.$('button[type="submit"]') || 
                        await page.$('button:has-text("–ó–∞–ø–∞–∑–∏")') ||
                        await page.$('button:has-text("Save")') ||
                        await page.$('button:has-text("Submit")')
    
    if (submitButton) {
      console.log('üîç Debug: Found submit button, clicking...')
      await submitButton.click()
    } else {
      console.log('‚ùå Could not find submit button')
      return
    }
    
    // 13. –ò–∑—á–∞–∫–∞–π –¥–∞ —Å–µ –∑–∞—Ç–≤–æ—Ä–∏ –º–æ–¥–∞–ª–∞
    console.log('üîç Debug: Waiting for modal to close...')
    try {
      await page.waitForFunction(() => {
        const modal = document.querySelector('.fixed.inset-0.bg-gray-600')
        return !modal || modal.style.display === 'none'
      }, { timeout: 10000 })
      console.log('‚úÖ –ú–æ–¥–∞–ª—ä—Ç —Å–µ –∑–∞—Ç–≤–æ—Ä–∏')
    } catch (error) {
      console.log('‚ùå –ú–æ–¥–∞–ª—ä—Ç –Ω–µ —Å–µ –∑–∞—Ç–≤–æ—Ä–∏ –≤ —Ä–∞–º–∫–∏—Ç–µ –Ω–∞ 10 —Å–µ–∫—É–Ω–¥–∏')
    }
    
    // –ò–∑—á–∞–∫–∞–π –º–∞–ª–∫–æ –ø–æ–≤–µ—á–µ –∑–∞ –¥–∞ —Å–µ –æ–±–Ω–æ–≤—è—Ç –¥–∞–Ω–Ω–∏—Ç–µ
    await new Promise(resolve => setTimeout(resolve, 3000))
    
    // 14. –ü—Ä–æ–≤–µ—Ä–∏ –¥–∞–ª–∏ –ø—Ä–æ–º–µ–Ω–∏—Ç–µ —Å–∞ —Å–µ –∑–∞–ø–∞–∑–∏–ª–∏
    console.log('üîç Debug: Checking if changes were saved...')
    
    // –ü—Ä–æ–≤–µ—Ä–∏ –≤—Å–∏—á–∫–∏ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏ –∑–∞ –æ–±–Ω–æ–≤–µ–Ω–æ—Ç–æ –∏–º–µ
    const allBookings = await page.$$('.bg-gray-50')
    console.log(`üîç Debug: Found ${allBookings.length} booking cards`)
    
    let foundUpdatedBooking = false
    for (let i = 0; i < allBookings.length; i++) {
      try {
        const bookingName = await allBookings[i].$eval('h3', el => el.textContent)
        console.log(`üîç Debug: Booking ${i + 1} name: ${bookingName}`)
        
        if (bookingName.includes('Updated Test Booking')) {
          console.log(`‚úÖ Found updated booking at position ${i + 1}`)
          foundUpdatedBooking = true
          break
        }
      } catch (error) {
        console.log(`üîç Debug: Could not read booking ${i + 1} name`)
      }
    }
    
    if (foundUpdatedBooking) {
      console.log('üéâ –£–°–ü–ï–•: –†–µ–¥–∞–∫—Ç–∏—Ä–∞–Ω–µ—Ç–æ –Ω–∞ —Ä–µ–∑–µ—Ä–≤–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∏ –ø—Ä–∞–≤–∏–ª–Ω–æ!')
    } else {
      console.log('‚ùå –ì–†–ï–®–ö–ê: –ü—Ä–æ–º–µ–Ω–∏—Ç–µ –Ω–µ —Å–∞ —Å–µ –∑–∞–ø–∞–∑–∏–ª–∏')
      console.log('üîç Debug: Expected to find "Updated Test Booking" but it was not found in any booking')
    }
    
  } catch (error) {
    console.error('‚ùå –ì–†–ï–®–ö–ê –ø—Ä–∏ —Ç–µ—Å—Ç–≤–∞–Ω–µ:', error.message)
    
    // –ù–∞–ø—Ä–∞–≤–∏ screenshot –ø—Ä–∏ –≥—Ä–µ—à–∫–∞
    await page.screenshot({ path: 'booking-editing-error.png' })
    console.log('üì∏ Screenshot –∑–∞–ø–∞–∑–µ–Ω –∫–∞—Ç–æ booking-editing-error.png')
  } finally {
    await browser.close()
    console.log('üîö –¢–µ—Å—Ç—ä—Ç –ø—Ä–∏–∫–ª—é—á–∏')
  }
}

// –°—Ç–∞—Ä—Ç–∏—Ä–∞–π —Ç–µ—Å—Ç–∞
testBookingEditing().catch(console.error) 